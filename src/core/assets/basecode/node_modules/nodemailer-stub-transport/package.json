{
  "_args": [
    [
      {
        "raw": "nodemailer-stub-transport@^1.0.0",
        "scope": null,
        "escapedName": "nodemailer-stub-transport",
        "name": "nodemailer-stub-transport",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Users/vt/Documents/development/canada/src/core/assets/basecode/node_modules/loopback"
    ]
  ],
  "_from": "nodemailer-stub-transport@>=1.0.0 <2.0.0",
  "_id": "nodemailer-stub-transport@1.1.0",
  "_inCache": true,
  "_location": "/nodemailer-stub-transport",
  "_nodeVersion": "6.3.1",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/nodemailer-stub-transport-1.1.0.tgz_1471504393403_0.3326213986147195"
  },
  "_npmUser": {
    "name": "andris",
    "email": "andris@kreata.ee"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "nodemailer-stub-transport@^1.0.0",
    "scope": null,
    "escapedName": "nodemailer-stub-transport",
    "name": "nodemailer-stub-transport",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/loopback"
  ],
  "_resolved": "https://registry.npmjs.org/nodemailer-stub-transport/-/nodemailer-stub-transport-1.1.0.tgz",
  "_shasum": "11421d2d66b4ee6f405354f914c1f4641eb24b0d",
  "_shrinkwrap": null,
  "_spec": "nodemailer-stub-transport@^1.0.0",
  "_where": "/Users/vt/Documents/development/canada/src/core/assets/basecode/node_modules/loopback",
  "author": {
    "name": "Andris Reinman"
  },
  "bugs": {
    "url": "https://github.com/andris9/nodemailer-stub-transport/issues"
  },
  "dependencies": {},
  "description": "Stub transport for Nodemailer",
  "devDependencies": {
    "chai": "^3.5.0",
    "grunt": "^1.0.1",
    "grunt-cli": "^1.2.0",
    "grunt-eslint": "^19.0.0",
    "grunt-mocha-test": "^0.12.7",
    "mocha": "^3.0.2",
    "sinon": "^1.17.5"
  },
  "directories": {},
  "dist": {
    "shasum": "11421d2d66b4ee6f405354f914c1f4641eb24b0d",
    "tarball": "https://registry.npmjs.org/nodemailer-stub-transport/-/nodemailer-stub-transport-1.1.0.tgz"
  },
  "gitHead": "8adb203c4ff434bf75649e0d1d98bb86c9bec3d8",
  "homepage": "http://github.com/andris9/nodemailer-stub-transport",
  "keywords": [
    "Stub",
    "Nodemailer"
  ],
  "license": "MIT",
  "main": "src/stub-transport.js",
  "maintainers": [
    {
      "name": "andris",
      "email": "andris@node.ee"
    }
  ],
  "name": "nodemailer-stub-transport",
  "optionalDependencies": {},
  "readme": "# Stub transport module for Nodemailer\n\nApplies for Nodemailer v1.0\n\nStub transport does not send anything, it builds the mail stream into a single Buffer and returns it with the sendMail callback. This is useful for testing the emails before actually sending anything.\n\n[![Build Status](https://travis-ci.org/andris9/nodemailer-stub-transport.svg?branch=master)](https://travis-ci.org/andris9/nodemailer-stub-transport) [![NPM version](https://badge.fury.io/js/nodemailer-stub-transport.svg)](http://badge.fury.io/js/nodemailer-stub-transport)\n\n## Usage\n\nInstall with npm\n\n```\nnpm install nodemailer-stub-transport\n```\n\nRequire to your script\n\n```javascript\nvar nodemailer = require('nodemailer');\nvar stubTransport = require('nodemailer-stub-transport');\n```\n\nCreate a Nodemailer transport object\n\n```javascript\nvar transport = nodemailer.createTransport(stubTransport());\n```\n\nSend a message\n\n```javascript\ntransport.sendMail(mailData, function(err, info){\n    console.log(info.response.toString());\n});\n```\n\nor \"verify\" settings\n\n```javascript\ntransport.verify(function(err, success){\n    if (error) {\n        console.log(error);\n   } else {\n        console.log('Server is ready to take our messages');\n   }\n});\n```\n\n## Errors\n\nThere's not much to error about but if you want the sending to fail and return an error then you can do this by specifying an error option when setting up the transport .\n\n```javascript\nvar transport = nodemailer.createTransport(stubTransport({\n    error: new Error('Invalid recipient')\n}));\ntransport.sendMail(mailData, function(err, info){\n    console.log(err.message); // 'Invalid recipient'\n});\n```\n\nSetting an error also applies to the verify call\n\n```javascript\ntransport.verify(function(err, success){\n    console.log(err.message); // 'Invalid recipient'\n});\n```\n\n### Using BCC\n\nIf you want to have BCC addresses included in the generated message, use `keepBcc` option\n\n```javascript\nvar transport = nodemailer.createTransport(stubTransport({\n    keepBcc: true\n}));\n```\n\n### Events\n\n#### 'log'\n\nDebug log object with `{name, version, level, type, message}`\n\n#### 'envelope'\n\nEnvelope object\n\n#### 'data'\n\nData chunk\n\n## License\n\n**MIT**\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/andris9/nodemailer-stub-transport.git"
  },
  "scripts": {
    "test": "grunt"
  },
  "version": "1.1.0"
}
