{
  "_args": [
    [
      {
        "raw": "to-utf8@0.0.1",
        "scope": null,
        "escapedName": "to-utf8",
        "name": "to-utf8",
        "rawSpec": "0.0.1",
        "spec": "0.0.1",
        "type": "version"
      },
      "/Users/vt/Documents/development/canada/src/core/assets/basecode/node_modules/bops"
    ]
  ],
  "_from": "to-utf8@0.0.1",
  "_id": "to-utf8@0.0.1",
  "_inCache": true,
  "_location": "/to-utf8",
  "_npmUser": {
    "name": "chrisdickinson",
    "email": "chris@neversaw.us"
  },
  "_npmVersion": "1.1.69",
  "_phantomChildren": {},
  "_requested": {
    "raw": "to-utf8@0.0.1",
    "scope": null,
    "escapedName": "to-utf8",
    "name": "to-utf8",
    "rawSpec": "0.0.1",
    "spec": "0.0.1",
    "type": "version"
  },
  "_requiredBy": [
    "/bops",
    "/msgpack-js/bops"
  ],
  "_resolved": "https://registry.npmjs.org/to-utf8/-/to-utf8-0.0.1.tgz",
  "_shasum": "d17aea72ff2fba39b9e43601be7b3ff72e089852",
  "_shrinkwrap": null,
  "_spec": "to-utf8@0.0.1",
  "_where": "/Users/vt/Documents/development/canada/src/core/assets/basecode/node_modules/bops",
  "author": {
    "name": "Chris Dickinson",
    "email": "chris@neversaw.us"
  },
  "bugs": {
    "url": "https://github.com/chrisdickinson/to-utf8/issues"
  },
  "dependencies": {},
  "description": "single-function form of node's Buffer.toString(utf8)",
  "devDependencies": {
    "tape": "~0.2.2"
  },
  "directories": {},
  "dist": {
    "shasum": "d17aea72ff2fba39b9e43601be7b3ff72e089852",
    "tarball": "https://registry.npmjs.org/to-utf8/-/to-utf8-0.0.1.tgz"
  },
  "homepage": "https://github.com/chrisdickinson/to-utf8#readme",
  "keywords": [
    "utf8",
    "buffer"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "chrisdickinson",
      "email": "chris@neversaw.us"
    }
  ],
  "name": "to-utf8",
  "optionalDependencies": {},
  "readme": "# to-utf8\n\ngiven an integer-indexable input iterable, produce a utf8 string.\n\n```javascript\n  var utf8 = require('to-utf8')\n\n  var buf = new Buffer('淾淾淾 hello world 淾淾 yep ƒuu 淾', 'utf8')\n  assert.equal(utf8(buf), buf.toString('utf8'))\n```\n\n## api\n\n#### utf8(iterable[, byteStart][, byteEnd]) -> string\n\ntake an iterable of bytes (`0...0xFF`) and produce an utf8 string.\n\n# license\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/chrisdickinson/to-utf8.git"
  },
  "scripts": {
    "test": "node test.js"
  },
  "version": "0.0.1"
}
