{
  "_args": [
    [
      {
        "raw": "bytebuffer@~3 >=3.5",
        "scope": null,
        "escapedName": "bytebuffer",
        "name": "bytebuffer",
        "rawSpec": "~3 >=3.5",
        "spec": ">=3.0.0 <4.0.0 >=3.5.0",
        "type": "range"
      },
      "/Users/vt/Desktop/new/node_modules/protobufjs"
    ]
  ],
  "_from": "bytebuffer@>=3.0.0 <4.0.0 >=3.5.0",
  "_id": "bytebuffer@3.5.5",
  "_inCache": true,
  "_location": "/bytebuffer",
  "_npmUser": {
    "name": "dcode",
    "email": "dcode@dcode.io"
  },
  "_npmVersion": "1.4.28",
  "_phantomChildren": {},
  "_requested": {
    "raw": "bytebuffer@~3 >=3.5",
    "scope": null,
    "escapedName": "bytebuffer",
    "name": "bytebuffer",
    "rawSpec": "~3 >=3.5",
    "spec": ">=3.0.0 <4.0.0 >=3.5.0",
    "type": "range"
  },
  "_requiredBy": [
    "/protobufjs"
  ],
  "_resolved": "https://registry.npmjs.org/bytebuffer/-/bytebuffer-3.5.5.tgz",
  "_shasum": "7a6faf1a13514b083f1fcf9541c4c9bfbe7e7fd3",
  "_shrinkwrap": null,
  "_spec": "bytebuffer@~3 >=3.5",
  "_where": "/Users/vt/Desktop/new/node_modules/protobufjs",
  "author": {
    "name": "Daniel Wirtz",
    "email": "dcode@dcode.io"
  },
  "browser": "dist/ByteBufferAB.js",
  "bugs": {
    "url": "https://github.com/dcodeIO/ByteBuffer.js/issues"
  },
  "dependencies": {
    "bufferview": "~1",
    "long": "~2 >=2.2.3"
  },
  "description": "The swiss army knife for binary data in JavaScript.",
  "devDependencies": {
    "closurecompiler": "~1",
    "lxiv": "~0.2",
    "metascript": "~0",
    "testjs": "~1",
    "utfx": "~1"
  },
  "directories": {},
  "dist": {
    "shasum": "7a6faf1a13514b083f1fcf9541c4c9bfbe7e7fd3",
    "tarball": "https://registry.npmjs.org/bytebuffer/-/bytebuffer-3.5.5.tgz"
  },
  "engines": {
    "node": ">=0.8"
  },
  "gitHead": "83b98043f13f6073b9e073f0eb39849dab5ae257",
  "homepage": "https://github.com/dcodeIO/ByteBuffer.js#readme",
  "keywords": [
    "net",
    "array",
    "buffer",
    "arraybuffer",
    "typed array",
    "bytebuffer",
    "json",
    "websocket",
    "webrtc"
  ],
  "license": "Apache-2.0",
  "main": "index.js",
  "maintainers": [
    {
      "name": "dcode",
      "email": "dcode@dcode.io"
    }
  ],
  "name": "bytebuffer",
  "optionalDependencies": {},
  "readme": "![ByteBuffer.js - The swiss army knife for binary data in JavaScript.](https://raw.github.com/dcodeIO/ByteBuffer.js/master/ByteBuffer.png)\r\n======================================\r\nA fast and complete ByteBuffer implementation using either ArrayBuffers in the browser or node Buffers under node.js,\r\ngenerated from a single source tree through [MetaScript](https://github.com/dcodeIO/MetaScript).\r\n\r\n[![Build Status](https://travis-ci.org/dcodeIO/ByteBuffer.js.svg?branch=master)](https://travis-ci.org/dcodeIO/ByteBuffer.js)\r\n[![Donate](https://raw.githubusercontent.com/dcodeIO/Long.js/master/donate.png)](https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=info%40code-emitter.com&item_name=Open%20Source%3A%20ByteBuffer.js)\r\n\r\nFeatures\r\n--------\r\n* Two API compatible versions, using either node Buffers under node.js or ArrayBuffers in the browser\r\n* 8, 16, 32 and 64 bit signed and unsigned integers\r\n* 32 and 64 bit floats\r\n* Varints as used in protobuf (32 and 64 bit, zig-zag)\r\n* [Base64](https://github.com/dcodeIO/lxiv), [utf8](https://github.com/dcodeIO/utfx), binary, hex and debug encodings\r\n* Handy string and debugging utilities\r\n* Big and little endianness\r\n* Relative and absolute zero-copy operations wherever possible\r\n* Transparent resizing when using unknown-length data\r\n* Chaining of all operations that do not return a specific value\r\n* Slicing, appending, prepending, reversing, flip, mark, reset, etc.\r\n\r\nUsage\r\n-----\r\nThe library is compatible with CommonJS and AMD loaders and is exposed globally as `dcodeIO.ByteBuffer` if neither is\r\navailable.\r\n\r\n```javascript\r\nvar ByteBuffer = require(\"bytebuffer\");\r\n\r\nvar bb = new ByteBuffer()\r\n            .writeIString(\"Hello world!\")\r\n            .flip();\r\nconsole.log(bb.readIString()+\" from ByteBuffer.js\");\r\n```\r\n\r\nIn the browser, 64 bit integer support is optional and present only if [Long.js](https://github.com/dcodeIO/Long.js) has\r\nbeen loaded prior to ByteBuffer.js.\r\n\r\nAPI\r\n---\r\n* [View the API documentation](https://github.com/dcodeIO/ByteBuffer.js/wiki/API)\r\n* [Check the wiki](https://github.com/dcodeIO/ByteBuffer.js/wiki)\r\n\r\nDownloads\r\n---------\r\n* [Distributions](https://github.com/dcodeIO/ByteBuffer.js/tree/master/dist)\r\n* [ZIP-Archive](https://github.com/dcodeIO/ByteBuffer.js/archive/master.zip)\r\n* [Tarball](https://github.com/dcodeIO/ByteBuffer.js/tarball/master)\r\n\r\nSupport for IE<10, FF<15, Chrome<9 etc.\r\n---------------------------------------\r\n* Requires working ArrayBuffer & DataView implementations (i.e. use a [polyfill](https://github.com/inexorabletash/polyfill#typed-arrays-polyfill))\r\n\r\nContributors\r\n------------\r\n[Dretch](https://github.com/Dretch) (IE8 compatibility)\r\n\r\nLicense\r\n-------\r\nApache License, Version 2.0 - http://www.apache.org/licenses/LICENSE-2.0.html\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dcodeIO/ByteBuffer.js.git"
  },
  "scripts": {
    "build": "node scripts/build.js",
    "compile": "ccjs dist/ByteBufferAB.js --create_source_map=dist/ByteBufferAB.min.map --compilation_level=ADVANCED_OPTIMIZATIONS --externs=externs/minimal-env.js --externs=node_modules/long/externs/Long.js > dist/ByteBufferAB.min.js",
    "compress": "gzip -c -9 dist/ByteBufferAB.min.js > dist/ByteBufferAB.min.js.gz",
    "make": "npm run-script build && npm run-script compile && npm run-script compress && npm test",
    "prepublish": "npm test",
    "test": "node node_modules/testjs/bin/testjs tests/suite.js"
  },
  "version": "3.5.5"
}
