{
  "_args": [
    [
      {
        "raw": "tdigest@^0.1.1",
        "scope": null,
        "escapedName": "tdigest",
        "name": "tdigest",
        "rawSpec": "^0.1.1",
        "spec": ">=0.1.1 <0.2.0",
        "type": "range"
      },
      "/Users/vt/Desktop/projects/newv1/node_modules/prom-client"
    ]
  ],
  "_from": "tdigest@>=0.1.1 <0.2.0",
  "_id": "tdigest@0.1.1",
  "_inCache": true,
  "_location": "/tdigest",
  "_nodeVersion": "0.10.35",
  "_npmUser": {
    "name": "welch",
    "email": "npm@quietplease.com"
  },
  "_npmVersion": "2.11.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "tdigest@^0.1.1",
    "scope": null,
    "escapedName": "tdigest",
    "name": "tdigest",
    "rawSpec": "^0.1.1",
    "spec": ">=0.1.1 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/prom-client"
  ],
  "_resolved": "https://registry.npmjs.org/tdigest/-/tdigest-0.1.1.tgz",
  "_shasum": "2e3cb2c39ea449e55d1e6cd91117accca4588021",
  "_shrinkwrap": null,
  "_spec": "tdigest@^0.1.1",
  "_where": "/Users/vt/Desktop/projects/newv1/node_modules/prom-client",
  "author": {
    "name": "Will Welch",
    "email": "welch@quietplease.com",
    "url": "http://quietplease.com/"
  },
  "bugs": {
    "url": "https://github.com/welch/tdigest/issues"
  },
  "dependencies": {
    "bintrees": "1.0.1"
  },
  "description": "javascript implementation of Dunning's T-Digest for streaming quantile approximation",
  "devDependencies": {
    "better-assert": "^1.0.2",
    "chai": "^3.0.0",
    "grunt": "^0.4.5",
    "grunt-pure-cjs": "^1.4.0",
    "mocha": "^2.1.0"
  },
  "directories": {},
  "dist": {
    "shasum": "2e3cb2c39ea449e55d1e6cd91117accca4588021",
    "tarball": "https://registry.npmjs.org/tdigest/-/tdigest-0.1.1.tgz"
  },
  "gitHead": "3dcd8776647dca489f013c56c36a10d261f5ce39",
  "homepage": "https://github.com/welch/tdigest",
  "keywords": [
    "tdigest",
    "percentile",
    "quantile",
    "histogram",
    "approximation"
  ],
  "license": "MIT",
  "main": "tdigest.js",
  "maintainers": [
    {
      "name": "welch",
      "email": "npm@quietplease.com"
    }
  ],
  "name": "tdigest",
  "optionalDependencies": {},
  "readme": "tdigest\n============\n[![Build Status][travis-image]][travis-url] [![NPM version][npm-image]][npm-url] [![NPM download][download-image]][npm-url]\n\nJavascript implementation of Dunning's T-Digest for streaming quantile approximation\n\nThe T-Digest is a data structure and algorithm for constructing an\napproximate distribution for a collection of real numbers presented as a\nstream. The algorithm makes no guarantees, but behaves well enough in\npractice that implementations have been included in Apache Mahout and\nElasticSearch for computing summaries and approximate order\nstatistics over a stream.\n\nFor an overview of T-Digest's behavior, see Davidson-Pilon's\n[blog post](http://dataorigami.net/blogs/napkin-folding/19055451-percentile-and-quantile-estimation-of-big-data-the-t-digest) regarding a python implementation. For more details,\nthere are the [tdigest paper](https://github.com/tdunning/t-digest/blob/master/docs/t-digest-paper/histo.pdf) and [reference implementation](https://github.com/tdunning/t-digest) (Java).\nThis javascript implementation is based on a reading of the paper,\nwith some boundary and performance tweaks.\n\n**changes in 0.1.1:**\n\n1. percentile on an empty digest returns *undefined* or array of *undefined*\n   instead of NaN\n\n2. upgraded bintrees to get bugfix.\n\n3. bugfix for discrete percentile and p_rank, make boundary conditions\n   conform to standard definition.\n\n**changes in 0.1.0:**\n\nDiscrete mode: when a TDigest is created with delta=false, the sample\ndistribution is treated as discrete. TDigest behavior is disabled,\ndiffering samples are never merged (they needn't even be numeric), and\npercentiles are reported as nearest exact data values rather than\ninterpolated.\n\nDigest: distribution digest structure. Starts in exact histogram\n(discrete) mode, remains in exact mode for reasonable numbers of\ndistinct values as sample size inreases, and automatically switches to\nTDigest mode for large samples that appear to be from a continuous\ndistribution.\n\nRenamed quantile() -> p_rank(), Percentile Rank.\n\npercentile() and p_rank() now accept arrays or singleton arguments.\n\n**changes in 0.0.7:**\n\nA `grunt dist` task has been added to create a UMD-wrapped version of tdigest\nand dependencies for importing as a standalone module in client-side javascript.\n\nbugfixes and speed improvements.\n\n**changes in 0.0.5:**\n\nAPI Overhaul:\n* asArray() -> toArray()\n* redigest() -> compress()\n* digest() -> push()\n* pushing an array no longer triggers compression\n\nbugfixes and speed improvements.\n\nquickstart\n------------\n\n#### node.js:\n\n```\nnpm install tdigest\n```\n\n```javascript\nvar TDigest = require('tdigest').TDigest;\nvar x=[], N = 100000;\nfor (var i = 0 ; i < N ; i += 1) {\n    x.push(Math.random() * 10 - 5);\n};\ntd = new TDigest();\ntd.push(x);\ntd.compress();\nconsole.log(td.summary());\nconsole.log(\"median ~ \"+td.percentile(0.5));\n```\n\nSee also [example.js](https://github.com/welch/tdigest/blob/master/example.js) in this package.\n\n#### In the browser:\n\nThe `grunt dist` task has been configured to generate\na self-contained [UMD-wrapped](https://github.com/umdjs/umd) version of tdigest in dist/tdigest.js.\n\nEmbed it in HTML like this:\n```\n<script src=\"dist/tdigest.js\"></script>\n<script>\n    var td = new this.tdigest.TDigest();\n    for (var i=0; i < 1000000; i++) {\n        td.push(Math.random());\n    }\n    td.compress();\n    document.write(td.summary())\n</script>\n```\n\nSee also [example.html](https://github.com/welch/tdigest/blob/master/example.html) in this package.\n\ndependencies\n-------------\n`bintrees`: [https://www.npmjs.com/package/bintrees](https://www.npmjs.com/package/bintrees)\n\n\n[travis-image]: https://travis-ci.org/welch/tdigest.svg?branch=master\n[travis-url]: https://travis-ci.org/welch/tdigest\n[npm-image]: http://img.shields.io/npm/v/tdigest.svg\n[download-image]: http://img.shields.io/npm/dm/tdigest.svg\n[npm-url]: https://www.npmjs.org/package/tdigest\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/welch/tdigest.git"
  },
  "scripts": {
    "test": "mocha specs"
  },
  "version": "0.1.1"
}
