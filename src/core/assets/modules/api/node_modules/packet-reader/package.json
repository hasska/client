{
  "_args": [
    [
      {
        "raw": "packet-reader@0.3.1",
        "scope": null,
        "escapedName": "packet-reader",
        "name": "packet-reader",
        "rawSpec": "0.3.1",
        "spec": "0.3.1",
        "type": "version"
      },
      "/Users/vt/Documents/development/canada/src/core/assets/basecode/node_modules/pg"
    ]
  ],
  "_from": "packet-reader@0.3.1",
  "_id": "packet-reader@0.3.1",
  "_inCache": true,
  "_location": "/packet-reader",
  "_nodeVersion": "6.9.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/packet-reader-0.3.1.tgz_1494602636735_0.5185135649517179"
  },
  "_npmUser": {
    "name": "brianc",
    "email": "brian.m.carlson@gmail.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "packet-reader@0.3.1",
    "scope": null,
    "escapedName": "packet-reader",
    "name": "packet-reader",
    "rawSpec": "0.3.1",
    "spec": "0.3.1",
    "type": "version"
  },
  "_requiredBy": [
    "/pg"
  ],
  "_resolved": "https://registry.npmjs.org/packet-reader/-/packet-reader-0.3.1.tgz",
  "_shasum": "cd62e60af8d7fea8a705ec4ff990871c46871f27",
  "_shrinkwrap": null,
  "_spec": "packet-reader@0.3.1",
  "_where": "/Users/vt/Documents/development/canada/src/core/assets/basecode/node_modules/pg",
  "author": {
    "name": "Brian M. Carlson"
  },
  "bugs": {
    "url": "https://github.com/brianc/node-packet-reader/issues"
  },
  "dependencies": {},
  "description": "Read binary packets...",
  "devDependencies": {
    "mocha": "~1.16.2"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "cd62e60af8d7fea8a705ec4ff990871c46871f27",
    "tarball": "https://registry.npmjs.org/packet-reader/-/packet-reader-0.3.1.tgz"
  },
  "gitHead": "bd2e4e1c5d4cd2cea8ae387307e66f51276e28dd",
  "homepage": "https://github.com/brianc/node-packet-reader",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "brianc",
      "email": "brian.m.carlson@gmail.com"
    }
  ],
  "name": "packet-reader",
  "optionalDependencies": {},
  "readme": "node-packet-reader\n==================\n\nHandy little well tested module for reading length-prefixed binary packets.\n\nSince buffers come off a socket in randomly sized chunks you can't expect them to cleanly\nbreak on packet boundaries.  This module allows you to push buffers in and read\nfull packets out the other side, so you can get to parsing right away and not have\nto manage concatenating partial buffers and searching through them for packets.\n\n## install\n\n` $ npm install packet-reader `\n\n## example\n\n```js\nvar Reader = require('packet-reader')\n\nvar reader = new Reader()\n//assuming you have a socket emitting `data` events\nsocket.on('data', function(buffer) {\n  reader.addChunk(buffer)\n  var packet = reader.read()\n  while(packet) {\n    //do something with fully parsed packet\n  }\n})\n```\n\n\nhere's a more full featured example:\n\nlet's assume our \"packet\" for our protocol is 32-bit Big Endian length-prefixed strings\nso a \"hello world\" packet would look something like [length, string]\n`[0, 0, 0 0x0B, h, e, l, l, o, w, o, r, l, d]`\n\n```js\nvar Transform = require('stream').Transform\nvar Reader = require('packet-reader')\nvar reader = new Reader()\nvar parser = new Transform()\nparser._transform = function(chunk, encoding, cb) {\n  reader.addChunk(chunk)\n  var packet = reader.read()\n  while(packet) {\n    this.push(packet.toString('utf8'))\n    packet = reader.read()\n  }\n  cb()\n}\n\nvar server = net.createServer(function(socket) {\n  socket.pipe(parser).pipe(stdout)\n})\n\n```\n\nThere are a few config options for setting optional pre-length padding byte.  Read the tests for details.\n\n## License\n\nMIT\n\nCopyright 2015 Brian M. Carlson\nAll rights reserved.\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/brianc/node-packet-reader.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "0.3.1"
}
