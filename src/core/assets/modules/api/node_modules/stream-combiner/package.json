{
  "_args": [
    [
      {
        "raw": "stream-combiner@0.0.2",
        "scope": null,
        "escapedName": "stream-combiner",
        "name": "stream-combiner",
        "rawSpec": "0.0.2",
        "spec": "0.0.2",
        "type": "version"
      },
      "/Users/vt/Desktop/projects/newv1/node_modules/mux-demux"
    ]
  ],
  "_from": "stream-combiner@0.0.2",
  "_id": "stream-combiner@0.0.2",
  "_inCache": true,
  "_location": "/stream-combiner",
  "_npmUser": {
    "name": "dominictarr",
    "email": "dominic.tarr@gmail.com"
  },
  "_npmVersion": "1.2.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "stream-combiner@0.0.2",
    "scope": null,
    "escapedName": "stream-combiner",
    "name": "stream-combiner",
    "rawSpec": "0.0.2",
    "spec": "0.0.2",
    "type": "version"
  },
  "_requiredBy": [
    "/mux-demux"
  ],
  "_resolved": "https://registry.npmjs.org/stream-combiner/-/stream-combiner-0.0.2.tgz",
  "_shasum": "dfe0e74675742565e76c6056788ea5c23bd97db4",
  "_shrinkwrap": null,
  "_spec": "stream-combiner@0.0.2",
  "_where": "/Users/vt/Desktop/projects/newv1/node_modules/mux-demux",
  "author": {
    "name": "'Dominic Tarr'",
    "email": "dominic.tarr@gmail.com",
    "url": "http://dominictarr.com"
  },
  "bugs": {
    "url": "https://github.com/dominictarr/stream-combiner/issues"
  },
  "dependencies": {
    "duplexer": "~0.0.3"
  },
  "description": "<img src=https://secure.travis-ci.org/dominictarr/stream-combiner.png?branch=master>",
  "devDependencies": {
    "event-stream": "~3.0.7",
    "tape": "0.0.4"
  },
  "directories": {},
  "dist": {
    "shasum": "dfe0e74675742565e76c6056788ea5c23bd97db4",
    "tarball": "https://registry.npmjs.org/stream-combiner/-/stream-combiner-0.0.2.tgz"
  },
  "homepage": "https://github.com/dominictarr/stream-combiner",
  "license": "MIT",
  "maintainers": [
    {
      "name": "dominictarr",
      "email": "dominic.tarr@gmail.com"
    }
  ],
  "name": "stream-combiner",
  "optionalDependencies": {},
  "readme": "# stream-combiner\n\n<img src=https://secure.travis-ci.org/dominictarr/stream-combiner.png?branch=master>\n\n## Combine (stream1,...,streamN)\n\nTurn a pipeline into a single stream. `pipeline` returns a stream that writes to the first stream\nand reads from the last stream. \n\nListening for 'error' will recieve errors from all streams inside the pipe.\n\n``` js\n  var Combine = require('stream-combiner')\n  var es      = require('event-stream')\n\n  Combine(                         //connect streams together with `pipe`\n    process.openStdin(),              //open stdin\n    es.split(),                       //split stream to break on newlines\n    es.map(function (data, callback) {//turn this async function into a stream\n      callback(null\n        , inspect(JSON.parse(data)))  //render it nicely\n    }),\n    process.stdout                    // pipe it to stdout !\n    )\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/dominictarr/stream-combiner.git"
  },
  "scripts": {
    "test": "set -e; for t in test/*.js; do node $t; done"
  },
  "version": "0.0.2"
}
