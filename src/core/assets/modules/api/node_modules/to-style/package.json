{
  "_args": [
    [
      {
        "raw": "to-style@^1.3.3",
        "scope": null,
        "escapedName": "to-style",
        "name": "to-style",
        "rawSpec": "^1.3.3",
        "spec": ">=1.3.3 <2.0.0",
        "type": "range"
      },
      "/Users/vt/Documents/development/canada/src/core/assets/basecode/node_modules/spectacle"
    ]
  ],
  "_from": "to-style@>=1.3.3 <2.0.0",
  "_id": "to-style@1.3.3",
  "_inCache": true,
  "_location": "/to-style",
  "_npmUser": {
    "name": "radubrehar",
    "email": "radu@evanghelic.ro"
  },
  "_npmVersion": "1.4.28",
  "_phantomChildren": {},
  "_requested": {
    "raw": "to-style@^1.3.3",
    "scope": null,
    "escapedName": "to-style",
    "name": "to-style",
    "rawSpec": "^1.3.3",
    "spec": ">=1.3.3 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/spectacle"
  ],
  "_resolved": "https://registry.npmjs.org/to-style/-/to-style-1.3.3.tgz",
  "_shasum": "63a2b70a6f4a7d4fdc2ed57a0be4e7235cb6699c",
  "_shrinkwrap": null,
  "_spec": "to-style@^1.3.3",
  "_where": "/Users/vt/Documents/development/canada/src/core/assets/basecode/node_modules/spectacle",
  "author": {
    "name": "Radu Brehar"
  },
  "bugs": {
    "url": "https://github.com/radubrehar/toStyle/issues"
  },
  "dependencies": {},
  "description": "Convert style objects to style strings",
  "devDependencies": {
    "mocha": "~1.20.1",
    "should": "~4.0.4"
  },
  "directories": {},
  "dist": {
    "shasum": "63a2b70a6f4a7d4fdc2ed57a0be4e7235cb6699c",
    "tarball": "https://registry.npmjs.org/to-style/-/to-style-1.3.3.tgz"
  },
  "gitHead": "43e38cfbfb361091f916666954a501669997da15",
  "homepage": "https://github.com/radubrehar/toStyle#readme",
  "keywords": [
    "style",
    "css",
    "object",
    "conver",
    "style",
    "to",
    "string"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "radubrehar",
      "email": "radu@evanghelic.ro"
    }
  ],
  "name": "to-style",
  "optionalDependencies": {},
  "readme": "toStyle\n=======\n\nConverts style objects to strings. Can be used on node or in the browser.\n\n## Install\n\n```npm install to-style```\n\n## Usage\n\n```js\nvar toStyleString = require('to-style').string\nvar toStyleObject = require('to-style').object\n```\n\n### toStyleString\n\n```js\ntoStyleString({\n    border: {\n        width: 1,\n        color: 'red'\n    },\n    padding: 4,\n    margin: {\n        top: 5\n    }\n}) == 'border-width: 1px; border-color: red; padding: 4px; margin-top: 5px;'\n```\n\n### toStyleObject\n```js\n\ntoStyleObject({\n    padding: {\n        top: 3,\n        bottom: 2\n    },\n    border: '1px solid red',\n    margin: 4\n}) // =>\n/*\n{\n    'padding-top': '3px',\n    'padding-bottom': '2px',\n    'border': '1px solid red',\n    'margin': '4px'\n}\n */\n```\n\nYou can also get your styles in camel-case, just pass a config object as a second argument to ```toStyleObject```, with ```camelize: true```\n\nExample:\n\n```js\ntoStyleObject({\n    padding: {\n        top: 10\n    },\n    'border-width': 20\n}, { camelize: true})\n\n/**\n *  {\n *      paddingTop: '10px',\n *      borderWidth: '20px'\n *  }\n */\n```\n\n## Usage in browser\n\nIn browser, make sure you add ```dist/toStyle.js``` to your page. This exposes a global ```toStyle``` variable.\n\n```js\nvar toStyleString = toStyle.string\nvar toStyleObject = toStyle.object\n\n```",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/radubrehar/toStyle.git"
  },
  "scripts": {
    "build": "browserify --standalone toStyle index.js -o dist/toStyle.js",
    "test": "make test",
    "test-debug": "mocha --debug-brk --require should",
    "test-w": "make test-w"
  },
  "version": "1.3.3"
}
