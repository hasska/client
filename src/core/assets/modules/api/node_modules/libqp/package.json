{
  "_args": [
    [
      {
        "raw": "libqp@1.1.0",
        "scope": null,
        "escapedName": "libqp",
        "name": "libqp",
        "rawSpec": "1.1.0",
        "spec": "1.1.0",
        "type": "version"
      },
      "/Users/vt/Desktop/projects/newv1/node_modules/libmime"
    ]
  ],
  "_from": "libqp@1.1.0",
  "_id": "libqp@1.1.0",
  "_inCache": true,
  "_location": "/libqp",
  "_nodeVersion": "4.1.0",
  "_npmUser": {
    "name": "andris",
    "email": "andris@kreata.ee"
  },
  "_npmVersion": "2.14.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "libqp@1.1.0",
    "scope": null,
    "escapedName": "libqp",
    "name": "libqp",
    "rawSpec": "1.1.0",
    "spec": "1.1.0",
    "type": "version"
  },
  "_requiredBy": [
    "/buildmail",
    "/libmime"
  ],
  "_resolved": "https://registry.npmjs.org/libqp/-/libqp-1.1.0.tgz",
  "_shasum": "f5e6e06ad74b794fb5b5b66988bf728ef1dedbe8",
  "_shrinkwrap": null,
  "_spec": "libqp@1.1.0",
  "_where": "/Users/vt/Desktop/projects/newv1/node_modules/libmime",
  "author": {
    "name": "Andris Reinman"
  },
  "bugs": {
    "url": "https://github.com/andris9/libqp/issues"
  },
  "dependencies": {},
  "description": "Encode and decode quoted-printable strings according to rfc2045",
  "devDependencies": {
    "chai": "~3.3.0",
    "grunt": "~0.4.5",
    "grunt-contrib-jshint": "~0.11.3",
    "grunt-mocha-test": "~0.12.7",
    "mocha": "^2.3.3"
  },
  "directories": {},
  "dist": {
    "shasum": "f5e6e06ad74b794fb5b5b66988bf728ef1dedbe8",
    "tarball": "https://registry.npmjs.org/libqp/-/libqp-1.1.0.tgz"
  },
  "gitHead": "af43f886d2fdf871f94dd8db7eaea1e7f881ea4f",
  "homepage": "https://github.com/andris9/libqp",
  "keywords": [
    "quoted-printable",
    "mime"
  ],
  "license": "MIT",
  "main": "lib/libqp.js",
  "maintainers": [
    {
      "name": "andris",
      "email": "andris@node.ee"
    }
  ],
  "name": "libqp",
  "optionalDependencies": {},
  "readme": "# libqp\n\nEncode and decode quoted-printable strings according to [RFC2045](http://tools.ietf.org/html/rfc2045#section-6.7).\n\n## Usage\n\nInstall with npm\n\n    npm install libqp\n\nRequire in your script\n\n```javascript\nvar libqp = require('libqp');\n```\n\n### Encode values\n\nEncode Buffer objects or unicode strings with\n\n    libqp.encode(val) → String\n\nWhere\n\n  * **val** is a Buffer or an unicode string\n\n**Example**\n\n```javascript\nlibqp.encode('jõgeva');\n// j=C3=B5geva\n```\n\n### Wrap encoded values\n\nQuoted-Printable encoded lines are limited to 76 characters but `encode` method might return lines longer than the limit.\n\nTo enforce soft line breaks on lines longer than 76 (or any other length) characters, use `wrap`\n\n    libqp.wrap(str[, lineLength]) → String\n\nWhere\n\n  * **str** is a Quoted-Printable encoded string\n  * **lineLength** (defaults to 76) is the maximum allowed line length. Any longer line will be soft wrapped\n\n**Example**\n\n```javascript\nlibqp.wrap('abc j=C3=B5geva', 10)\n// abc j=\\r\\n\n// =C3=B5geva\n```\n\n### Transform Streams\n\n`libqp` makes it possible to encode and decode streams with `libqp.Encoder` and `libqp.Decoder` constructors.\n\n### Encoder Stream\n\nCreate new Encoder Stream with\n\n    var encoder = new libqp.Encoder([options])\n\nWhere\n\n  * **options** is the optional stream options object with an additional option `lineLength` if you want to use any other line length than the default 76 characters (or set to `false` to turn the soft wrapping off completely)\n\n**Example**\n\nThe following example script reads in a file, encodes it to Quoted-Printable and saves the output to a file.\n\n```javascript\nvar libqp = require('libqp');\nvar fs = require('fs');\nvar source = fs.createReadStream('source.txt');\nvar encoded = fs.createReadStream('encoded.txt');\nvar encoder = new libqp.Encoder();\n\nsource.pipe(encoder).pipe(encoded);\n```\n\n### Decoder Stream\n\nCreate new Decoder Stream with\n\n    var decoder = new libqp.Decoder([options])\n\nWhere\n\n  * **options** is the optional stream options object\n\n**Example**\n\nThe following example script reads in a file in Quoted-Printable encoding, decodes it and saves the output to a file.\n\n```javascript\nvar libqp = require('libqp');\nvar fs = require('fs');\nvar encoded = fs.createReadStream('encoded.txt');\nvar dest = fs.createReadStream('dest.txt');\nvar decoder = new libqp.Decoder();\n\nencoded.pipe(decoder).pipe(dest);\n```\n\n## License\n\n**MIT**",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/andris9/libqp.git"
  },
  "scripts": {
    "test": "grunt"
  },
  "version": "1.1.0"
}
