{
  "_args": [
    [
      {
        "raw": "marksy@^6.0.2",
        "scope": null,
        "escapedName": "marksy",
        "name": "marksy",
        "rawSpec": "^6.0.2",
        "spec": ">=6.0.2 <7.0.0",
        "type": "range"
      },
      "/Users/vt/Documents/development/canada/src/core/assets/basecode/node_modules/spectacle"
    ]
  ],
  "_from": "marksy@>=6.0.2 <7.0.0",
  "_id": "marksy@6.0.3",
  "_inCache": true,
  "_location": "/marksy",
  "_nodeVersion": "8.9.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/marksy-6.0.3.tgz_1515237418009_0.08529217774048448"
  },
  "_npmUser": {
    "name": "hypnosphi",
    "email": "talpa@yandex.ru"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "marksy@^6.0.2",
    "scope": null,
    "escapedName": "marksy",
    "name": "marksy",
    "rawSpec": "^6.0.2",
    "spec": ">=6.0.2 <7.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/spectacle"
  ],
  "_resolved": "https://registry.npmjs.org/marksy/-/marksy-6.0.3.tgz",
  "_shasum": "6079076e8689b563b61be058942090c7ba1f5d20",
  "_shrinkwrap": null,
  "_spec": "marksy@^6.0.2",
  "_where": "/Users/vt/Documents/development/canada/src/core/assets/basecode/node_modules/spectacle",
  "author": {
    "name": "Christian Alfoni"
  },
  "bugs": {
    "url": "https://github.com/storybooks/marksy/issues"
  },
  "dependencies": {
    "babel-standalone": "^6.26.0",
    "he": "^1.1.1",
    "marked": "^0.3.9"
  },
  "description": "Convert markdown into react components",
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-core": "^6.26.0",
    "babel-eslint": "^8.1.2",
    "babel-jest": "^22.0.4",
    "babel-loader": "^7.1.2",
    "babel-preset-env": "^1.6.1",
    "babel-preset-react": "^6.24.1",
    "babel-preset-stage-2": "^6.24.1",
    "cross-env": "^5.1.3",
    "css-loader": "^0.28.7",
    "eslint": "^4.14.0",
    "eslint-config-airbnb": "^16.1.0",
    "eslint-config-prettier": "^2.9.0",
    "eslint-plugin-import": "^2.8.0",
    "eslint-plugin-jest": "^21.5.0",
    "eslint-plugin-json": "^1.2.0",
    "eslint-plugin-jsx-a11y": "^6.0.3",
    "eslint-plugin-prettier": "^2.4.0",
    "eslint-plugin-react": "^7.5.1",
    "global": "^4.3.2",
    "highlight.js": "^9.12.0",
    "inferno-create-element": "^3.10.1",
    "inferno-server": "^3.10.1",
    "jest": "^22.0.4",
    "json-loader": "^0.5.7",
    "node-libs-browser": "^2.1.0",
    "preact": "^8.2.7",
    "preact-render-to-string": "^3.7.0",
    "prettier": "^1.9.2",
    "prismjs": "^1.9.0",
    "prop-types": "^15.6.0",
    "react": "^16.2.0",
    "react-dom": "^16.2.0",
    "react-test-renderer": "^16.2.0",
    "regenerator-runtime": "^0.11.1",
    "size-limit": "^0.13.2",
    "style-loader": "^0.19.1",
    "webpack": "^3.10.0",
    "webpack-dev-server": "^2.9.7"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-k9r4HIpKlreInh6IVDGxhRs0veCr6WfLwP6lr2HXG8so+N6m6rfFKSpik9ZbvnTfKvdPhehwBWT5W+Fli29Ebg==",
    "shasum": "6079076e8689b563b61be058942090c7ba1f5d20",
    "tarball": "https://registry.npmjs.org/marksy/-/marksy-6.0.3.tgz"
  },
  "gitHead": "27e764793fab679c0a7cb124c573df0975cd1487",
  "homepage": "https://github.com/storybooks/marksy",
  "keywords": [
    "convert",
    "markdown",
    "react"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "ndelangen",
      "email": "ndelangen@me.com"
    },
    {
      "name": "hypnosphi",
      "email": "talpa@yandex.ru"
    },
    {
      "name": "christianalfoni",
      "email": "christianalfoni@gmail.com"
    }
  ],
  "name": "marksy",
  "optionalDependencies": {},
  "readme": "# Marksy\nA markdown to custom components library. Supports any virtual DOM library.\n\n## Installation\n\n```sh\nnpm install marksy\n```\n\n## Usage\n```js\nimport React, {createElement} from 'React';\nimport marksy from 'marksy'\n// const marksy = require('marksy').marksy\n\nconst compile = marksy({\n  // Pass in whatever creates elements for your\n  // virtual DOM library. h('h1', {})\n  createElement,\n\n  // You can override the default elements with\n  // custom VDOM trees\n  elements: {\n    h1 ({id, children}) {\n      return <h1 className=\"my-custom-class\">{children}</h1>\n    },\n    h2 ({id, children}) {},\n    h3 ({id, children}) {},\n    h4 ({id, children}) {},\n    blockquote ({children}) {},\n    hr () {},\n    ol ({children}) {},\n    ul ({children}) {},\n    p ({children}) {},\n    table ({children}) {},\n    thead ({children}) {},\n    tbody ({children}) {},\n    tr ({children}) {},\n    th ({children}) {},\n    td ({children}) {},\n    a ({href, title, target, children}) {},\n    strong ({children}) {},\n    em ({children}) {},\n    br () {},\n    del ({children}) {},\n    img ({src, alt}) {},\n    code ({language, code}) {},\n    codespan ({children}) {},\n  },\n});\n\nconst compiled = compile('# hello', {\n  // Options passed to \"marked\" (https://www.npmjs.com/package/marked)\n});\n\ncompiled.tree // The React tree of components\ncompiled.toc // The table of contents, based on usage of headers\n```\n\n### Custom components\nYou can also add your own custom components. You do this by importing `marksy/components`. This build of marksy includes babel transpiler which will convert any HTML to elements and allow for custom components:\n\n<pre lang=\"js\"><code>\nimport React, {createElement} from 'react'\nimport marksy from 'marksy/components'\n\nconst compile = marksy({\n  createElement,\n  components: {\n    MyCustomComponent (props) {\n      return &lt;h1>{props.children}&lt;/h1>\n    }\n  }\n})\n\n/* MARKDOWN:\n  # Just a test\n  &lt;MyCustomComponent>some text&lt;/MyCustomComponent>\n*/\n\n/* WITH LANGUAGE FOR GENERIC SUPPORT:\n  # Just a test\n  ```marksy\n  &lt;MyCustomComponent>some text&lt;/MyCustomComponent>\n  ```\n*/\n</code></pre>\n\nThis will be converted to the component above. You can pass in any kind of props, as if it was normal code.\n\n### Context\nYou might need to pass in general information to your custom elements and components. You can pass in a context to do so:\n\n```js\nimport React, {createElement} from 'react'\nimport marksy from 'marksy/components'\n\nconst compile = marksy({\n  createElement,\n  elements: {\n    h1(props) {\n      return <h1>{props.context.foo}</h1>\n    }\n  },\n  components: {\n    MyCustomComponent (props) {\n      return <h1>{props.context.foo}</h1>\n    }\n  }\n})\n\ncompile('<MyCustomComponent />', null, {\n  foo: 'bar'\n})\n```\n\n### Code highlighting\nTo enable code highlighting you just need to add a method that does the transformation. Here is an example with [Highlight.js](https://highlightjs.org/), but you could also use [Prism](http://prismjs.com/). Both of them support server side rendering. For example:\n\n```js\nimport {createElement} from 'react'\nimport 'highlight.js/styles/github.css';\nimport hljs from 'highlight.js/lib/highlight';\nimport hljsJavascript from 'highlight.js/lib/languages/javascript';\nimport marksy from 'marksy/components'\n\nhljs.registerLanguage('javascript', hljsJavascript);\n\nconst compile = marksy({\n  createElement,\n  highlight(language, code) {\n    return hljs.highlight(language, code).value\n  }\n})\n```\n\nThe elements returned is:\n\n```html\n<pre>\n  <code class=\"language-js\">\n    ...code...\n  </code>\n</pre>\n```\n\nMeaning that the `code` element is added a classname based on the language.\n\n## Developing\n1. Clone repo\n2. `npm install`\n3. `npm start` -> localhost:8080 (development app)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/storybooks/marksy.git"
  },
  "scripts": {
    "build": "BABEL_ENV=production babel src/ --out-dir=lib/ -s",
    "lint": "cross-env NODE_ENV=production eslint --cache --cache-location=.cache/eslint --ext .js,.jsx,.json ./src ./app",
    "prepare": "npm run build",
    "size": "size-limit",
    "start": "webpack-dev-server --devtool eval-source-map --progress --colors --content-base build",
    "test": "jest && size-limit"
  },
  "size-limit": [
    {
      "path": "lib/index.js",
      "limit": "30 KB"
    }
  ],
  "version": "6.0.3"
}
