{
  "_args": [
    [
      {
        "raw": "loopback-datatype-geopoint@^1.0.0",
        "scope": null,
        "escapedName": "loopback-datatype-geopoint",
        "name": "loopback-datatype-geopoint",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Users/vt/Desktop/projects/newv1/node_modules/strong-remoting"
    ]
  ],
  "_from": "loopback-datatype-geopoint@>=1.0.0 <2.0.0",
  "_id": "loopback-datatype-geopoint@1.0.0",
  "_inCache": true,
  "_location": "/loopback-datatype-geopoint",
  "_nodeVersion": "4.4.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/loopback-datatype-geopoint-1.0.0.tgz_1479937203749_0.9918912085704505"
  },
  "_npmUser": {
    "name": "thegman",
    "email": "gpandya@live.com"
  },
  "_npmVersion": "2.14.20",
  "_phantomChildren": {},
  "_requested": {
    "raw": "loopback-datatype-geopoint@^1.0.0",
    "scope": null,
    "escapedName": "loopback-datatype-geopoint",
    "name": "loopback-datatype-geopoint",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/strong-remoting"
  ],
  "_resolved": "https://registry.npmjs.org/loopback-datatype-geopoint/-/loopback-datatype-geopoint-1.0.0.tgz",
  "_shasum": "fdaa5c7ab8d730a9ab7e54554be165f31cdf6100",
  "_shrinkwrap": null,
  "_spec": "loopback-datatype-geopoint@^1.0.0",
  "_where": "/Users/vt/Desktop/projects/newv1/node_modules/strong-remoting",
  "bugs": {
    "url": "https://github.com/strongloop/loopback-datatype-geopoint/issues"
  },
  "dependencies": {},
  "description": "LoopBack GeoPoint class",
  "devDependencies": {
    "eslint": "^2.5.3",
    "eslint-config-loopback": "^1.0.0",
    "mocha": "^2.4.5",
    "should": "^8.0.2"
  },
  "directories": {},
  "dist": {
    "shasum": "fdaa5c7ab8d730a9ab7e54554be165f31cdf6100",
    "tarball": "https://registry.npmjs.org/loopback-datatype-geopoint/-/loopback-datatype-geopoint-1.0.0.tgz"
  },
  "engines": {
    "node": ">=4"
  },
  "gitHead": "51ab1fbaaed5ab27a8c2483b5ee2d84b923b76f1",
  "homepage": "https://github.com/strongloop/loopback-datatype-geopoint#readme",
  "keywords": [
    "LoopBack",
    "StrongLoop",
    "loopback-geopoint",
    "GeoPoint"
  ],
  "license": "MIT",
  "main": "lib/geopoint.js",
  "maintainers": [
    {
      "name": "thegman",
      "email": "gpandya@live.com"
    }
  ],
  "name": "loopback-datatype-geopoint",
  "optionalDependencies": {},
  "readme": "# loopback-datatype-geopoint\n\n## Overview\n\nThe Geopoint object is a LoopBack data type that represents a physical location.\n\n[loopback-datasource-juggler](https://github.com/strongloop/loopback-datasource-juggler) and [strong-remoting](https://github.com/strongloop/strong-remoting) modules use this object to facilitate use of `GeoPoint` data type in a LoopBack model properties & remote methods.\n\n### Create a new GeoPoint object:\nFor example, to create a GeoPoint object in LoopBack:\n\n```javascript\nvar loopback = require(‘loopback’);\nvar here = new loopback.GeoPoint({lat: 10.32424, lng: 5.84978});\n```\n\nThe constructor requires two values:\n - `lat`: Latitude point in degrees. **Range: -90 to 90**.\n - `lng`: Longitude point in degrees. **Range: -180 to 180**\n\nCall the constructor with any of the following arguments:\n - Two numbers, for example `new GeoPoint(10.32, 5.84)`\n - Number string of form \"_lat_, _lng_\", for example `new GeoPoint('10.32, 5.84')`\n - Array with two number elements: `[lat, lng]`, for example `new GeoPoint([10.32, 5.84])`\n - Object with two number properties: `lat` and `lng`, for example `new GeoPoint({ lat: 10.32, lng: 5.84})`\n\n### Using GeoPoint type\n- in a LoopBack Model:\n\n Declare a GeoPoint property in the model JSON file, for example:\n\n  ```json\n  ...\n  \"properties\": {\n      \"location\": {\n        \"type\": \"GeoPoint\"\n      },\n    ...\n  }\n  ...\n  ```\n\n  or programtically:\n\n  ```javascript\n  var CoffeeShop = loopback.createModel('coffee-shop', {\n    location: 'GeoPoint'\n  });\n  ```\n\n- in [remote methods](http://loopback.io/doc/en/lb2/Remote-methods.html):\n\n  'accepts' & 'returns' argument types, for remote method, can be set to `GeoPoint` type, for example, in a remote method `getNearbyLocation` for model `MyModel`:\n\n  *common/models/my-model.js*\n  ```javascript\n   MyModel.remoteMethod('getNearbyLocation', {\n          accepts: {arg: 'loc', type: 'GeoPoint'},\n          returns: {arg: 'location', type: 'GeoPoint'}\n    });\n  ```\n\n### Static Method:\n- `distanceBetween(pointA, pointB, options)`:\n\n  Determine the spherical distance between two GeoPoints\n\n  **Arguments:**\n\n  | Name | Type | Description   |\n  |----------|-------------|-----------|\n  | pointA | GeoPoint | Point A|\n  | pointB | GeoPoint | Point B|\n  | options | Object | Options object with one key, 'type'. See below.|\n\n  **Options:**\n\n  | Name | Type | Description |\n  |:---------:|:------:|-----------|\n  | type | String | Unit of measurement, one of:<br> miles (default)<br>radians<br>kilometers<br>meters<br>miles<br>feet<br>degrees |\n\n### Instance Methods:\n- `geoPoint.distanceTo(point, options)`:\n\n  Determine the spherical distance to the given point.\n\n  For example:\n  ```javascript\n  var loopback = require(‘loopback’);\n\n  var here = new loopback.GeoPoint({lat: 10, lng: 10});\n  var there = new loopback.GeoPoint({lat: 5, lng: 5});\n\n  console.log(here.distanceTo(there, {type: 'miles'})); // result: 438\n  ```\n\n  **Arguments:**\n\n  | Name | Type | Description   |\n  |----------|-------------|-----------|\n  | point | GeoPoint | GeoPoint object to which to measure distance. |\n  | options | Object | Options object with one key, 'type'. Same as `options` in `distanceBetween()`|\n\n- `geoPoint.toString()`:\n  Simple serialization of `geoPoint`.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/strongloop/loopback-datatype-geopoint.git"
  },
  "scripts": {
    "lint": "eslint .",
    "posttest": "npm run lint",
    "test": "mocha"
  },
  "version": "1.0.0"
}
