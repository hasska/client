{
  "_args": [
    [
      {
        "raw": "babel-standalone@^6.26.0",
        "scope": null,
        "escapedName": "babel-standalone",
        "name": "babel-standalone",
        "rawSpec": "^6.26.0",
        "spec": ">=6.26.0 <7.0.0",
        "type": "range"
      },
      "/Users/vt/Documents/development/canada/src/core/assets/basecode/node_modules/marksy"
    ]
  ],
  "_from": "babel-standalone@>=6.26.0 <7.0.0",
  "_id": "babel-standalone@6.26.0",
  "_inCache": true,
  "_location": "/babel-standalone",
  "_nodeVersion": "7.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/babel-standalone-6.26.0.tgz_1502900465385_0.48807692411355674"
  },
  "_npmUser": {
    "name": "danbuild",
    "email": "build@dan.cx"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "babel-standalone@^6.26.0",
    "scope": null,
    "escapedName": "babel-standalone",
    "name": "babel-standalone",
    "rawSpec": "^6.26.0",
    "spec": ">=6.26.0 <7.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/marksy"
  ],
  "_resolved": "https://registry.npmjs.org/babel-standalone/-/babel-standalone-6.26.0.tgz",
  "_shasum": "15fb3d35f2c456695815ebf1ed96fe7f015b6886",
  "_shrinkwrap": null,
  "_spec": "babel-standalone@^6.26.0",
  "_where": "/Users/vt/Documents/development/canada/src/core/assets/basecode/node_modules/marksy",
  "author": {
    "name": "Daniel Lo Nigro",
    "email": "daniel@dan.cx",
    "url": "http://dan.cx/"
  },
  "bugs": {
    "url": "https://github.com/Daniel15/babel-standalone/issues"
  },
  "dependencies": {},
  "description": "Standalone build of Babel for use in non-Node.js environments. Similar to the (now deprecated) babel-browser",
  "devDependencies": {
    "babel-core": "6.26.0",
    "babel-helper-builder-react-jsx": "6.23.0",
    "babel-loader": "6.4.1",
    "babel-plugin-check-es2015-constants": "6.22.0",
    "babel-plugin-external-helpers": "6.22.0",
    "babel-plugin-inline-replace-variables": "1.3.1",
    "babel-plugin-minify-constant-folding": "0.2.0",
    "babel-plugin-minify-dead-code-elimination": "0.2.0",
    "babel-plugin-minify-empty-function": "0.0.1",
    "babel-plugin-minify-flip-comparisons": "0.2.0",
    "babel-plugin-minify-guarded-expressions": "0.2.0",
    "babel-plugin-minify-infinity": "0.2.0",
    "babel-plugin-minify-mangle-names": "0.2.0",
    "babel-plugin-minify-replace": "0.2.0",
    "babel-plugin-minify-simplify": "0.2.0",
    "babel-plugin-minify-type-constructors": "0.2.0",
    "babel-plugin-syntax-async-functions": "6.13.0",
    "babel-plugin-syntax-async-generators": "6.13.0",
    "babel-plugin-syntax-class-constructor-call": "6.18.0",
    "babel-plugin-syntax-class-properties": "6.13.0",
    "babel-plugin-syntax-decorators": "6.13.0",
    "babel-plugin-syntax-do-expressions": "6.13.0",
    "babel-plugin-syntax-exponentiation-operator": "6.13.0",
    "babel-plugin-syntax-export-extensions": "6.13.0",
    "babel-plugin-syntax-flow": "6.18.0",
    "babel-plugin-syntax-function-bind": "6.13.0",
    "babel-plugin-syntax-function-sent": "6.13.0",
    "babel-plugin-syntax-jsx": "6.18.0",
    "babel-plugin-syntax-object-rest-spread": "6.13.0",
    "babel-plugin-syntax-trailing-function-commas": "6.22.0",
    "babel-plugin-transform-async-functions": "6.22.0",
    "babel-plugin-transform-async-to-generator": "6.24.1",
    "babel-plugin-transform-async-to-module-method": "6.24.1",
    "babel-plugin-transform-class-constructor-call": "6.24.1",
    "babel-plugin-transform-class-properties": "6.24.1",
    "babel-plugin-transform-decorators": "6.24.1",
    "babel-plugin-transform-decorators-legacy": "1.3.4",
    "babel-plugin-transform-do-expressions": "6.22.0",
    "babel-plugin-transform-es2015-arrow-functions": "6.22.0",
    "babel-plugin-transform-es2015-block-scoped-functions": "6.22.0",
    "babel-plugin-transform-es2015-block-scoping": "6.26.0",
    "babel-plugin-transform-es2015-classes": "6.24.1",
    "babel-plugin-transform-es2015-computed-properties": "6.24.1",
    "babel-plugin-transform-es2015-destructuring": "6.23.0",
    "babel-plugin-transform-es2015-duplicate-keys": "6.24.1",
    "babel-plugin-transform-es2015-for-of": "6.23.0",
    "babel-plugin-transform-es2015-function-name": "6.24.1",
    "babel-plugin-transform-es2015-instanceof": "6.22.0",
    "babel-plugin-transform-es2015-literals": "6.22.0",
    "babel-plugin-transform-es2015-modules-amd": "6.24.1",
    "babel-plugin-transform-es2015-modules-commonjs": "6.26.0",
    "babel-plugin-transform-es2015-modules-systemjs": "6.24.1",
    "babel-plugin-transform-es2015-modules-umd": "6.24.1",
    "babel-plugin-transform-es2015-object-super": "6.24.1",
    "babel-plugin-transform-es2015-parameters": "6.24.1",
    "babel-plugin-transform-es2015-shorthand-properties": "6.24.1",
    "babel-plugin-transform-es2015-spread": "6.22.0",
    "babel-plugin-transform-es2015-sticky-regex": "6.24.1",
    "babel-plugin-transform-es2015-template-literals": "6.22.0",
    "babel-plugin-transform-es2015-typeof-symbol": "6.23.0",
    "babel-plugin-transform-es2015-unicode-regex": "6.24.1",
    "babel-plugin-transform-es3-member-expression-literals": "6.22.0",
    "babel-plugin-transform-es3-property-literals": "6.22.0",
    "babel-plugin-transform-es5-property-mutators": "6.24.1",
    "babel-plugin-transform-eval": "6.22.0",
    "babel-plugin-transform-exponentiation-operator": "6.24.1",
    "babel-plugin-transform-export-extensions": "6.22.0",
    "babel-plugin-transform-flow-comments": "6.22.0",
    "babel-plugin-transform-flow-strip-types": "6.22.0",
    "babel-plugin-transform-function-bind": "6.22.0",
    "babel-plugin-transform-inline-environment-variables": "6.8.0",
    "babel-plugin-transform-jscript": "6.22.0",
    "babel-plugin-transform-member-expression-literals": "6.8.5",
    "babel-plugin-transform-merge-sibling-variables": "6.8.6",
    "babel-plugin-transform-minify-booleans": "6.8.3",
    "babel-plugin-transform-node-env-inline": "6.8.0",
    "babel-plugin-transform-object-assign": "6.22.0",
    "babel-plugin-transform-object-rest-spread": "6.26.0",
    "babel-plugin-transform-object-set-prototype-of-to-assign": "6.22.0",
    "babel-plugin-transform-property-literals": "6.8.5",
    "babel-plugin-transform-proto-to-assign": "6.26.0",
    "babel-plugin-transform-react-constant-elements": "6.23.0",
    "babel-plugin-transform-react-display-name": "6.25.0",
    "babel-plugin-transform-react-inline-elements": "6.22.0",
    "babel-plugin-transform-react-jsx": "6.24.1",
    "babel-plugin-transform-react-jsx-compat": "6.24.1",
    "babel-plugin-transform-react-jsx-self": "6.22.0",
    "babel-plugin-transform-react-jsx-source": "6.22.0",
    "babel-plugin-transform-regenerator": "6.26.0",
    "babel-plugin-transform-remove-console": "6.8.5",
    "babel-plugin-transform-remove-debugger": "6.8.5",
    "babel-plugin-transform-runtime": "6.23.0",
    "babel-plugin-transform-simplify-comparison-operators": "6.8.5",
    "babel-plugin-transform-strict-mode": "6.24.1",
    "babel-plugin-transform-undefined-to-void": "6.8.3",
    "babel-plugin-undeclared-variables-check": "6.22.0",
    "babel-preset-babili": "0.1.4",
    "babel-preset-es2015": "6.24.1",
    "babel-preset-es2016": "6.24.1",
    "babel-preset-es2017": "6.24.1",
    "babel-preset-latest": "6.24.1",
    "babel-preset-react": "6.24.1",
    "babel-preset-stage-0": "6.24.1",
    "babel-preset-stage-1": "6.24.1",
    "babel-preset-stage-2": "6.24.1",
    "babel-preset-stage-3": "6.24.1",
    "gulp": "^3.9.1",
    "gulp-rename": "^1.2.2",
    "gulp-uglify": "^2.0.1",
    "jest": "^18.1.0",
    "json-loader": "^0.5.4",
    "lazypipe": "^1.0.1",
    "npm-check-updates": "^2.8.9",
    "pump": "^1.0.2",
    "react": "^15.4.2",
    "webpack": "^1.14.0",
    "webpack-stream": "^3.2.0"
  },
  "directories": {},
  "dist": {
    "shasum": "15fb3d35f2c456695815ebf1ed96fe7f015b6886",
    "tarball": "https://registry.npmjs.org/babel-standalone/-/babel-standalone-6.26.0.tgz"
  },
  "files": [
    "babel.js",
    "babel.min.js",
    "src"
  ],
  "gitHead": "ac0eeee18fcbbe52991487b73ecd2b6469be8022",
  "homepage": "https://github.com/Daniel15/babel-standalone#readme",
  "keywords": [
    "babel",
    "babeljs",
    "6to5",
    "transpile",
    "transpiler"
  ],
  "license": "MIT",
  "main": "babel.js",
  "maintainers": [
    {
      "name": "daniel15",
      "email": "npm@dan.cx"
    },
    {
      "name": "danbuild",
      "email": "build@dan.cx"
    }
  ],
  "name": "babel-standalone",
  "optionalDependencies": {},
  "readme": "babel-standalone\r\n================\r\n\r\nbabel-standalone is a standalone build of Babel for use in non-Node.js environments, including browsers. It's bundled with all the standard Babel plugins and presets, and [a build of babili (babel-minify)](http://dl.vc/babili-standalone) is optionally available too.\r\n\r\nBut why?!\r\n=========\r\n\r\nIt's true that using Babel through Webpack, Browserify or Gulp should be sufficient for most use cases. However, there are some valid use cases for babel-standalone:\r\n\r\n - Sites like [JSFiddle](https://jsfiddle.net/), [JS Bin](https://jsbin.com/), the [REPL on the Babel site](http://babeljs.io/repl/), etc. These sites compile user-provided JavaScript in real-time.\r\n - Apps that embed a JavaScript engine such as V8 directly, and want to use Babel for compilation\r\n  - Apps that want to use JavaScript as a scripting language for extending the app itself, including all the goodies that ES2015 provides.\r\n  - Integration of Babel into a non-Node.js environment ([ReactJS.NET](http://reactjs.net/), [ruby-babel-transpiler](https://github.com/babel/ruby-babel-transpiler), [php-babel-transpiler](https://github.com/talyssonoc/php-babel-transpiler), etc).\r\n\r\nInstallation\r\n============\r\n\r\nThere are several ways to get a copy of babel-standalone. Pick whichever one you like:\r\n\r\n- Use it via UNPKG: https://unpkg.com/babel-standalone@6/babel.min.js. This is a simple way to embed it on a webpage without having to do any other setup.\r\n- Install via Bower: `bower install babel-standalone`\r\n- Install via NPM: `npm install --save babel-standalone`\r\n- Manually grab `babel.js` and/or `babel.min.js` from the [GitHub releases page](https://github.com/Daniel15/babel-standalone/releases). Every release includes these files.\r\n- Install it via Git: You can use the repo at https://github.com/Daniel15/babel-standalone-bower to pull a prebuilt version from Git. Note that this is generally only advised for systems that *must* pull artifacts from Git, such as Bower.\r\n\r\nUsage\r\n=====\r\n\r\nLoad `babel.js` or `babel.min.js` in your environment. This will expose [Babel's API](http://babeljs.io/docs/usage/api/) in a `Babel` object:\r\n\r\n```js\r\nvar input = 'const getMessage = () => \"Hello World\";';\r\nvar output = Babel.transform(input, { presets: ['es2015'] }).code;\r\n```\r\n\r\nWhen loaded in a browser, babel-standalone will automatically compile and execute all script tags with type `text/babel` or `text/jsx`:\r\n```html\r\n<div id=\"output\"></div>\r\n<!-- Load Babel -->\r\n<script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\r\n<!-- Your custom script here -->\r\n<script type=\"text/babel\">\r\nconst getMessage = () => \"Hello World\";\r\ndocument.getElementById('output').innerHTML = getMessage();\r\n</script>\r\n```\r\n\r\nYou can use the `data-plugins` and `data-presets` attributes to specify the Babel plugins/presets to use:\r\n```html\r\n<script type=\"text/babel\" data-presets=\"es2015,stage-2\">\r\n```\r\n\r\nLoading external scripts via `src` attribute is supported too:\r\n```html\r\n<script type=\"text/babel\" src=\"foo.js\"></script>\r\n```\r\n\r\nNote that `.babelrc` doesn't work in babel-standalone, as no file system access is available. The presets and/or plugins to use **must** be specified in the options passed to `Babel.transform`.\r\n\r\nCustomisation\r\n=============\r\nCustom plugins and presets can be added using the `registerPlugin` and `registerPreset` methods respectively:\r\n\r\n```js\r\n// Simple plugin that converts every identifier to \"LOL\"\r\nfunction lolizer() {\r\n  return {\r\n    visitor: {\r\n      Identifier(path) {\r\n        path.node.name = 'LOL';\r\n      }\r\n    }\r\n  }\r\n}\r\nBabel.registerPlugin('lolizer', lolizer);\r\n```\r\n\r\nOnce registered, just use the name of the plugin:\r\n\r\n```js\r\nvar output = Babel.transform(\r\n  'function helloWorld() { alert(hello); }',\r\n  {plugins: ['lolizer']}\r\n);\r\n// Returns \"function LOL() { LOL(LOL); }\"\r\n```\r\n\r\nCustom plugins also work for inline `<script>`s:\r\n\r\n```html\r\n<script type=\"text/babel\" data-plugins=\"lolizer\">\r\n```\r\n\r\nManually Building\r\n=================\r\n\r\nIf you want to manually upgrade the Babel version used by babel-standalone (or build your own release), follow these steps:\r\n\r\n1. Upgrade the Babel versions in `package.json`. This can be done with `npm-check-upgrades` (eg. `npm-check-updates -u -a --packageFile ./package.json /^babel\\-/`)\r\n2. Delete `node_modules`, as npm often produces inefficient directory layouts if you upgrade in-place\r\n3. Run `npm install && npm run build`\r\n4. Run `npm run test` to ensure it works\r\n5. Open `examples/example.htm` and ensure it works\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Daniel15/babel-standalone.git"
  },
  "scripts": {
    "build": "gulp build",
    "test": "jest"
  },
  "version": "6.26.0"
}
