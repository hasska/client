{
  "_args": [
    [
      {
        "raw": "babel-plugin-emotion@^8.0.12",
        "scope": null,
        "escapedName": "babel-plugin-emotion",
        "name": "babel-plugin-emotion",
        "rawSpec": "^8.0.12",
        "spec": ">=8.0.12 <9.0.0",
        "type": "range"
      },
      "/Users/vt/Documents/development/canada/src/core/assets/basecode/node_modules/emotion"
    ]
  ],
  "_from": "babel-plugin-emotion@>=8.0.12 <9.0.0",
  "_id": "babel-plugin-emotion@8.0.12",
  "_inCache": true,
  "_location": "/babel-plugin-emotion",
  "_nodeVersion": "8.9.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/babel-plugin-emotion-8.0.12.tgz_1512084599853_0.2251946514006704"
  },
  "_npmUser": {
    "name": "mitchellhamilton",
    "email": "mitchell@mitchellhamilton.me"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "babel-plugin-emotion@^8.0.12",
    "scope": null,
    "escapedName": "babel-plugin-emotion",
    "name": "babel-plugin-emotion",
    "rawSpec": "^8.0.12",
    "spec": ">=8.0.12 <9.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/emotion",
    "/react-emotion"
  ],
  "_resolved": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-8.0.12.tgz",
  "_shasum": "2ed844001416b0ae2ff787a06b1804ec5f531c89",
  "_shrinkwrap": null,
  "_spec": "babel-plugin-emotion@^8.0.12",
  "_where": "/Users/vt/Documents/development/canada/src/core/assets/basecode/node_modules/emotion",
  "author": {
    "name": "Kye Hohenberger"
  },
  "bugs": {
    "url": "https://github.com/tkh44/emotion/issues"
  },
  "dependencies": {
    "@babel/helper-module-imports": "7.0.0-beta.32",
    "babel-macros": "^1.2.0",
    "babel-plugin-syntax-jsx": "^6.18.0",
    "convert-source-map": "^1.5.0",
    "emotion-utils": "^8.0.12",
    "find-root": "^1.1.0",
    "source-map": "^0.5.7",
    "touch": "^1.0.0"
  },
  "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
  "devDependencies": {
    "@babel/core": "7.0.0-beta.32",
    "babel-cli": "^6.24.1",
    "npm-run-all": "^4.0.2",
    "rimraf": "^2.6.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-GVxl6Y86I2PPICtFqabf5qvcVc0MD8PJbLujJ9UV1tdC5QoKMe+dZD0DCpdTDEzlOJVwetMu7m+bg66NeGi49w==",
    "shasum": "2ed844001416b0ae2ff787a06b1804ec5f531c89",
    "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-8.0.12.tgz"
  },
  "files": [
    "src",
    "lib"
  ],
  "homepage": "https://github.com/tkh44/emotion#readme",
  "keywords": [
    "styles",
    "emotion",
    "react",
    "css",
    "css-in-js"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "tkh44",
      "email": "kye.hohenberger@gmail.com"
    },
    {
      "name": "mitchellhamilton",
      "email": "mitchell@mitchellhamilton.me"
    }
  ],
  "name": "babel-plugin-emotion",
  "optionalDependencies": {},
  "readme": "# babel-plugin-emotion\n\n> Babel plugin for the minification and optimization of [emotion](https://github.com/emotion-js/emotion) styles.\n\nThe Babel Plugin is highly recommended, but not required in version 8 and above.\n\n## Feature table\n\n| Feature/Syntax           | Native | Babel Plugin Required | Notes                                                                                                                                        |\n|--------------------------|:------:|:---------------------:|----------------------------------------------------------------------------------------------------------------------------------------------|\n| css``               |    ✅   |                       |                                                                                                                                              |\n| `css(...)`               |    ✅   |                       | Generally used for object styles.                                                                                                            |\n| styled('div')`` syntax |    ✅   |                       | Both string and object styles work without this plugin.                                                                                      |\n| styled.div`` syntax    |        |           ✅           | Supporting the shortcut syntax without the Babel plugin requires a large list of valid elements to be included in the bundle.                |\n| components as selectors    |        |           ✅           | Allows an emotion component to be [used as a CSS selector](https://github.com/emotion-js/emotion/blob/master/docs/styled.md#targeting-another-emotion-component).                |\n| Minification             |        |           ✅           | Any leading/trailing space between properties in your `css` and `styled` blocks is removed. This can reduce the size of your final bundle.   |\n| Dead Code Elimination    |        |           ✅           | Uglifyjs will use the injected `/*#__PURE__*/` flag comments to mark your `css` and `styled` blocks as candidates for dead code elimination. |\n| Static Extraction        |        |           ✅           | Generated CSS that is eligible for extraction can be moved to an external css file.                                                          |\n| Source Maps              |        |           ✅           | When enabled, navigate directly to the style declaration in your javascript file.                                                            |\n| `css` as Prop            |        |           ✅           | Convenient helper for calling `css` and appending the generated className during compile time.                                               |\n| Contextual Class Names   |        |           ✅           | Generated class names include the name of the variable or component they were defined in.\n## Example\n\n**In**\n\n```javascript\nconst myStyles = css`\n  font-size: 20px;\n  @media(min-width: 420px) {\n    color: blue;\n    ${css`width: 96px; height: 96px;`};\n    line-height: 26px;\n  }\n  background: green;\n  ${{ backgroundColor: \"hotpink\" }};\n`\n```\n\n**Out**\n\n```javascript\nconst myStyles = /* #__PURE__ */css(\n  'font-size:20px;@media(min-width:420px){color:blue;',\n  /* #__PURE__ */ css('width:96px;height:96px;'),\n  ';line-height:26px;}background:green;',\n  { backgroundColor: 'hotpink' },\n  ';'\n)\n```\n\n## Installation\n\n```sh\nnpm install --save-dev babel-plugin-emotion\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\nWith options:\n\n*Defaults Shown*\n\n```json\n{\n  \"plugins\": [\n    [\"emotion\", {\n      \"hoist\": false,\n      \"sourceMap\": false,\n      \"autoLabel\": false,\n      \"extractStatic\": false,\n      \"importedNames\": {\n        \"styled\": \"styled\",\n        \"css\": \"css\",\n        \"keyframes\": \"keyframes\",\n        \"injectGlobal\": \"injectGlobal\",\n        \"fontFace\": \"fontFace\",\n        \"merge\": \"merge\"\n      }\n    }]\n  ]\n}\n```\n\nRecommended Setup\n\nUse [Babel's `env` property](https://babeljs.io/docs/usage/babelrc/#env-option)\n\n**.babelrc**\n```json\n{\n  \"env\": {\n    \"production\": {\n      \"plugins\": [[\"emotion\", { \"sourceMap\": false, \"hoist\": true, \"autoLabel\": true }]]\n    },\n    \"development\": {\n      \"plugins\": [[\"emotion\", { \"sourceMap\": true, \"hoist\": false, \"autoLabel\": true  }]]\n    }\n  }\n}\n```\n\n### Via CLI\n\n```sh\nbabel --plugins babel-plugin-emotion script.js\n```\n\n### Via Node API\n\n```javascript\nrequire(\"@babel/core\").transform(\"code\", {\n  plugins: [\"babel-plugin-emotion\"]\n});\n```\n\n## Options\n\n### `hoist`\n\n`boolean`, defaults to `false`.\n\nThis option enables the following:\n\n - Any argument supplied to `css` or `styled` is hoisted.\n\nBy hoisting the argument, or assigning the value to a variable,\nemotion is able to leverage the use of a [WeakMap](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap)\n[cache](https://github.com/emotion-js/emotion/blob/6257f0c9cb00db9cbd08a9d6995f335730808329/packages/emotion/src/index.js#L85-L116) to increase performance. Users of object styles will benefit the most from enabling this option.\n\n**In**\n\n```javascript\ncss({ color: 'brown' });\n```\n\n**Out**\n\n```javascript\nvar _ref = { color: 'brown' };\ncss(_ref);\n```\n\n\n### `sourceMap`\n\n`boolean`, defaults to `false`.\n\nThis option enables the following:\n\n - Injected source maps for use in browser dev tools\n\n[**Documentation**](docs/source-maps.md)\n\n### `autoLabel`\n\n`boolean`, defaults to `false`.\n\nThis option enables the following:\n\n - Automatically adds the `label` property to styles so that class names generated by `css` or `styled` include the name of the variable the result is assigned to.\n\n#### css\n\n**In**\n\n```javascript\nconst brownStyles = css({ color: 'brown' });\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/css({ color: 'blue' }, \"label:brownStyles;\");\n```\n\n`brownStyles`'s value would be `css-1q8eu9e-brownStyles`\n\n#### styled\n\n**In**\n\n```javascript\nconst Profile = () => {\n  const H1 = styled.h1({\n    borderRadius: '50%',\n    transition: 'transform 400ms ease-in-out',\n    boxSizing: 'border-box',\n    display: 'flex',\n    ':hover': {\n      transform: 'scale(1.2)'\n    }\n  })\n}\n```\n\n**Out**\n\n```javascript\nconst Profile = () => {\n  const H1 = /*#__PURE__*/styled('h1', {\n    label: 'H1'\n  })({\n    borderRadius: '50%',\n    transition: 'transform 400ms ease-in-out',\n    boxSizing: 'border-box',\n    display: 'flex',\n    ':hover': {\n      transform: 'scale(1.2)'\n    }\n  });\n};\n```\n\n`H1`'s class name attribute would be `css-13djram-H1`\n\n\n### `extractStatic`\n\n`boolean`, defaults to `false`.\n\nThis option enables the following:\n\n - Extract static styles into CSS files.\n\n[**Documentation**](docs/extract-static.md)\n\n### `importedNames`\n\n\n`object`, defaults to\n\n```json\n{\n  \"styled\": \"styled\",\n  \"css\": \"css\",\n  \"keyframes\": \"keyframes\",\n  \"injectGlobal\": \"injectGlobal\",\n  \"fontFace\": \"fontFace\",\n  \"merge\": \"merge\"\n}\n```\n\nThis option enables the following:\n\n - Configurable import names\n\n[**Documentation**](docs/configurable-imports.md)\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/tkh44/emotion/tree/master/packages/babel-plugin-emotion"
  },
  "scripts": {
    "babel": "babel src -d lib",
    "build": "npm-run-all clean babel",
    "clean": "rimraf lib",
    "watch": "babel src -d lib --watch"
  },
  "version": "8.0.12"
}
