{
  "_args": [
    [
      {
        "raw": "grunt-prettify@^0.4.0",
        "scope": null,
        "escapedName": "grunt-prettify",
        "name": "grunt-prettify",
        "rawSpec": "^0.4.0",
        "spec": ">=0.4.0 <0.5.0",
        "type": "range"
      },
      "/Users/vt/Documents/development/canada/src/core/assets/basecode/node_modules/spectacle-docs"
    ]
  ],
  "_from": "grunt-prettify@>=0.4.0 <0.5.0",
  "_id": "grunt-prettify@0.4.0",
  "_inCache": true,
  "_location": "/grunt-prettify",
  "_npmUser": {
    "name": "jonschlinkert",
    "email": "github@sellside.com"
  },
  "_npmVersion": "1.4.9",
  "_phantomChildren": {
    "array-differ": "0.1.0",
    "brace-expansion": "1.1.11",
    "inflight": "1.0.6",
    "inherits": "2.0.3",
    "once": "1.4.0"
  },
  "_requested": {
    "raw": "grunt-prettify@^0.4.0",
    "scope": null,
    "escapedName": "grunt-prettify",
    "name": "grunt-prettify",
    "rawSpec": "^0.4.0",
    "spec": ">=0.4.0 <0.5.0",
    "type": "range"
  },
  "_requiredBy": [
    "/spectacle-docs"
  ],
  "_resolved": "https://registry.npmjs.org/grunt-prettify/-/grunt-prettify-0.4.0.tgz",
  "_shasum": "fc853db4245d4908ab6e35afb5277213eddc194b",
  "_shrinkwrap": null,
  "_spec": "grunt-prettify@^0.4.0",
  "_where": "/Users/vt/Documents/development/canada/src/core/assets/basecode/node_modules/spectacle-docs",
  "author": {
    "name": "jonschlinkert",
    "url": "http://github.com/jonschlinkert/"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/grunt-prettify/issues"
  },
  "dependencies": {
    "async": "~0.9.0",
    "globby": "^0.1.1",
    "js-beautify": "~1.5.4",
    "lodash": "~2.4.1",
    "underscore.string": "~2.3.3"
  },
  "description": "HTML prettifier with options to format HTML according to your own preferences.",
  "devDependencies": {
    "assemble": "~0.4.27",
    "grunt": "~0.4.2",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-jshint": "~0.7.2",
    "mocha": "*",
    "verb": ">= 0.2.6"
  },
  "directories": {},
  "dist": {
    "shasum": "fc853db4245d4908ab6e35afb5277213eddc194b",
    "tarball": "https://registry.npmjs.org/grunt-prettify/-/grunt-prettify-0.4.0.tgz"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "homepage": "https://github.com/jonschlinkert/grunt-prettify",
  "keywords": [
    "beautifier",
    "beautify",
    "code",
    "format",
    "formatter",
    "formatting",
    "grunt",
    "gruntplugin",
    "html",
    "indent",
    "indenter",
    "plugin",
    "prettifier",
    "prettify"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/jonschlinkert/grunt-prettify/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "maintainers": [
    {
      "name": "jonschlinkert",
      "email": "github@sellside.com"
    }
  ],
  "name": "grunt-prettify",
  "optionalDependencies": {},
  "readme": "# grunt-prettify [![NPM version](https://badge.fury.io/js/grunt-prettify.svg)](http://badge.fury.io/js/grunt-prettify)\n\n\n> HTML prettifier with options to format HTML according to your own preferences.\n\n## Install\n#### Install with [npm](npmjs.org):\n\n```bash\nnpm i grunt-prettify --save-dev\n```\n\nOnce the plugin has been installed, add the following line to your Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-prettify');\n```\n\n### Overview\nIn your project's Gruntfile, add a section named `prettify` to the data object passed into `grunt.initConfig()`.\n\n```javascript\ngrunt.initConfig({\n  prettify: {\n    options: {\n      // Task-specific options go here.\n    },\n    html: {\n      // Target-specific file lists and/or options go here.\n    }\n  }\n});\n```\n\n### Options\n#### config\nType: `String`\nDefault value: `null`\n\nPath to `.jsbeautifyrc`. If this option is specified, options defined therein will be used. The `.jsbeautifyrc` file must be valid JSON and looks something like this:\n\n```json\n{\n  \"indent\": 4,\n  \"condense\": true,\n  \"indent_inner_html\": true,\n  \"unformatted\": [\n    \"a\",\n    \"pre\"\n  ]\n}\n```\n\nNote that options defined in `.jsbeautifyrc` override the default options, and options defined in the Gruntfile override all other options.\n\n#### condense\nType: `Boolean`\nDefault value: `true`\n\nRemoves extra newlines and retains indenting.\n\n#### preserveBOM\nType: `Boolean`\nDefault value: `false`\n\nPreserve byte-order marks that might exist. Also see the [Grunt.js source](https://github.com/gruntjs/grunt/blob/master/lib/grunt/file.js#L217).\n\n#### padcomments\nType: `Boolean|Number`\nDefault value: `false`\n\nAdd newlines above each code comment. For backwards compatibility, you may set to `true` to add a single newline, or specify the number of newlines you want to add.\n\n#### indent\nType: `Number`\nDefault value: `2`\n\nThe indentation size to be used on the output HTML. This is an alias for `indent_size`. So either `indent` or `indent_size` may be used.\n\n#### indent_char\nType: `String`\nDefault value: `' '` (space)\nOptions: `space`|`tab` (use an actual space or tab, not the word)\n\nCharacter with which to indent the output HTML.\n\n#### indent_scripts\nType: `String`\nDefault value: `keep`\nOptions: `keep`|`separate`|`normal`\n\nThe indentation character to use to indent the output HTML.\n\n#### indent_inner_html\nType: `Boolean`\nDefault value: `true`\n\nIndent `<body></body>` and `<head></head>` sections.\n\n#### brace_style\nType: `String`\nDefault value: `expand`\n\nOptions:\n\n* `collapse`: (default) puts braces on the same line as control statements\n* `expand`: put all braces on their own lines (Allman / ANSI style)\n* `end-expand`: put _end_ braces only on their own line.\n\n#### wrap_line_length\nType: `Number`\nDefault value: `0` (disabled)\n\nMaximum characters per line. `0` disables, max is `250`.\n\n#### preserve_newlines\nType: `Boolean`\nDefault value: `false`\n\nPreserve existing line-breaks.\n\n#### max_preserve_newlines\nType: `Number`\nDefault value: `unlimited`\n\nMaximum number of consecutive line-breaks to be preserved.\n\n#### unformatted\nType: `String|Array`\nDefault value: `[\"pre\", \"code\"]`\n\nArray of tags that should not be re-formatted in the output. Defaults to inline.\n\n_Attention:_ Make sure you play around with the settings and view the HTML in the browser. Pay special attention to whitespace around links and other inline elements, such as `<strong>` and `<span>`. If you specify a list of elements to remain `unformatted`, you will definitely need to make sure that whitepace is rendering the way you want it to.\n\n## Usage Examples\n### Default Options\nThe default setup in this project's Gruntfile uses an external `.prettifyrc` file for controlling the task's options.\n\n```js\ngrunt.initConfig({\n  prettify: {\n    options: {\n      config: '.prettifyrc'\n    },\n    files: {\n      'pretty/index.html': ['ugly/index.html']\n    }\n  }\n});\n```\n\nThe default options are set to:\n\n``` json\n{\n  \"indent\": 2,\n  \"indent_char\": \" \",\n  \"indent_scripts\": \"normal\",\n  \"wrap_line_length\": 0,\n  \"brace_style\": \"collapse\",\n  \"preserve_newlines\": true,\n  \"max_preserve_newlines\": 1,\n  \"unformatted\": [\n    \"a\",\n    \"code\",\n    \"pre\"\n  ]\n}\n```\n\n### Custom Options\n\nYou can also specify the options in the Gruntfile if you wish, like this:\n\n```js\nprettify: {\n  options: {\n    indent: 2,\n    indent_char: ' ',\n    wrap_line_length: 78,\n    brace_style: 'expand',\n    unformatted: ['a', 'sub', 'sup', 'b', 'i', 'u']\n  },\n  ...\n}\n```\n\nExample configurations for prettifying one file at a time, or entire directories of files:\n\n```js\nprettify: {\n  options: {\n    config: '.prettifyrc'\n  },\n  // Prettify a directory of files\n  all: {\n    expand: true,\n    cwd: 'test/actual/ugly/',\n    ext: '.html',\n    src: ['*.html'],\n    dest: 'test/actual/pretty/'\n  },\n  // Or prettify one file at a time using the \"files object\" format\n  files: {\n    'pretty/index.html': ['ugly/index.html']\n  },\n  // Or the \"compact\" src-dest format\n  one: {\n    src: 'test/actual/ugly/index.html',\n    dest: 'test/actual/pretty/index.html'\n  }\n}\n```\n\nSee the [grunt][] docs for more information about task configuration.\n\n## Author\n\n**jonschlinkert**\n \n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert) \n\n## License\nCopyright (c) 2014 jonschlinkert, contributors.  \nReleased under the MIT license\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on October 10, 2014._",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jonschlinkert/grunt-prettify.git"
  },
  "scripts": {
    "test": "grunt test"
  },
  "version": "0.4.0"
}
