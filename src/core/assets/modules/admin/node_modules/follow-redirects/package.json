{
  "_args": [
    [
      {
        "raw": "follow-redirects@^1.3.0",
        "scope": null,
        "escapedName": "follow-redirects",
        "name": "follow-redirects",
        "rawSpec": "^1.3.0",
        "spec": ">=1.3.0 <2.0.0",
        "type": "range"
      },
      "/Users/vt/Desktop/projects/newv1/dashboard/node_modules/axios"
    ]
  ],
  "_from": "follow-redirects@>=1.3.0 <2.0.0",
  "_id": "follow-redirects@1.4.1",
  "_inCache": true,
  "_location": "/follow-redirects",
  "_nodeVersion": "8.9.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/follow-redirects-1.4.1.tgz_1516754560314_0.16931934002786875"
  },
  "_npmUser": {
    "name": "rubenverborgh",
    "email": "ruben.verborgh@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "follow-redirects@^1.3.0",
    "scope": null,
    "escapedName": "follow-redirects",
    "name": "follow-redirects",
    "rawSpec": "^1.3.0",
    "spec": ">=1.3.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/axios"
  ],
  "_resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.4.1.tgz",
  "_shasum": "d8120f4518190f55aac65bb6fc7b85fcd666d6aa",
  "_shrinkwrap": null,
  "_spec": "follow-redirects@^1.3.0",
  "_where": "/Users/vt/Desktop/projects/newv1/dashboard/node_modules/axios",
  "author": {
    "name": "Olivier Lalonde",
    "email": "olalonde@gmail.com",
    "url": "http://www.syskall.com"
  },
  "bugs": {
    "url": "https://github.com/olalonde/follow-redirects/issues"
  },
  "contributors": [
    {
      "name": "James Talmage",
      "email": "james@talmage.io"
    },
    {
      "name": "Ruben Verborgh",
      "email": "ruben@verborgh.org",
      "url": "https://ruben.verborgh.org/"
    }
  ],
  "dependencies": {
    "debug": "^3.1.0"
  },
  "description": "HTTP and HTTPS modules that follow redirects.",
  "devDependencies": {
    "bluebird": "^3.5.1",
    "concat-stream": "^1.6.0",
    "coveralls": "^3.0.0",
    "eslint": "^4.16.0",
    "express": "^4.16.2",
    "mocha": "^5.0.0",
    "nyc": "^11.4.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-uxYePVPogtya1ktGnAAXOacnbIuRMB4dkvqeNz2qTtTQsuzSfbDolV+wMMKxAmCx0bLgAKLbBOkjItMbbkR1vg==",
    "shasum": "d8120f4518190f55aac65bb6fc7b85fcd666d6aa",
    "tarball": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.4.1.tgz"
  },
  "engines": {
    "node": ">=4.0"
  },
  "files": [
    "index.js",
    "create.js",
    "http.js",
    "https.js"
  ],
  "gitHead": "1b6340f83ad5596a0a38c16a7113692bd90301f2",
  "homepage": "https://github.com/olalonde/follow-redirects",
  "keywords": [
    "http",
    "https",
    "url",
    "redirect",
    "client",
    "location",
    "utility"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "rubenverborgh",
      "email": "ruben.verborgh@gmail.com"
    },
    {
      "name": "jamestalmage",
      "email": "james@talmage.io"
    },
    {
      "name": "olalonde",
      "email": "olalonde@gmail.com"
    }
  ],
  "name": "follow-redirects",
  "nyc": {
    "reporter": [
      "lcov",
      "text"
    ]
  },
  "optionalDependencies": {},
  "readme": "## Follow Redirects\n\nDrop-in replacement for Nodes `http` and `https` that automatically follows redirects.\n\n[![npm version](https://badge.fury.io/js/follow-redirects.svg)](https://www.npmjs.com/package/follow-redirects)\n[![Build Status](https://travis-ci.org/olalonde/follow-redirects.svg?branch=master)](https://travis-ci.org/olalonde/follow-redirects)\n[![Coverage Status](https://coveralls.io/repos/olalonde/follow-redirects/badge.svg?branch=master)](https://coveralls.io/r/olalonde/follow-redirects?branch=master)\n[![Dependency Status](https://david-dm.org/olalonde/follow-redirects.svg)](https://david-dm.org/olalonde/follow-redirects)\n[![devDependency Status](https://david-dm.org/olalonde/follow-redirects/dev-status.svg)](https://david-dm.org/olalonde/follow-redirects#info=devDependencies)\n\n[![NPM](https://nodei.co/npm/follow-redirects.png?downloads=true)](https://nodei.co/npm/follow-redirects/)\n\n`follow-redirects` provides [request](https://nodejs.org/api/http.html#http_http_request_options_callback) and [get](https://nodejs.org/api/http.html#http_http_get_options_callback)\n methods that behave identically to those found on the native [http](https://nodejs.org/api/http.html#http_http_request_options_callback) and [https](https://nodejs.org/api/https.html#https_https_request_options_callback)\n modules, with the exception that they will seamlessly follow redirects.\n\n```javascript\nvar http = require('follow-redirects').http;\nvar https = require('follow-redirects').https;\n\nhttp.get('http://bit.ly/900913', function (response) {\n  response.on('data', function (chunk) {\n    console.log(chunk);\n  });\n}).on('error', function (err) {\n  console.error(err);\n});\n```\n\nYou can inspect the final redirected URL through the `responseUrl` property on the `response`.\nIf no redirection happened, `responseUrl` is the original request URL.\n\n```javascript\nhttps.request({\n  host: 'bitly.com',\n  path: '/UHfDGO',\n}, function (response) {\n  console.log(response.responseUrl);\n  // 'http://duckduckgo.com/robots.txt'\n});\n```\n\n## Options\n### Global options\nGlobal options are set directly on the `follow-redirects` module:\n\n```javascript\nvar followRedirects = require('follow-redirects');\nfollowRedirects.maxRedirects = 10;\nfollowRedirects.maxBodyLength = 20 * 1024 * 1024; // 20 MB\n```\n\nThe following global options are supported:\n\n- `maxRedirects` (default: `21`) – sets the maximum number of allowed redirects; if exceeded, an error will be emitted.\n\n- `maxBodyLength` (default: 10MB) – sets the maximum size of the request body; if exceeded, an error will be emitted.\n\n\n### Per-request options\nPer-request options are set by passing an `options` object:\n\n```javascript\nvar url = require('url');\nvar followRedirects = require('follow-redirects');\n\nvar options = url.parse('http://bit.ly/900913');\noptions.maxRedirects = 10;\nhttp.request(options);\n```\n\nIn addition to the [standard HTTP](https://nodejs.org/api/http.html#http_http_request_options_callback) and [HTTPS options](https://nodejs.org/api/https.html#https_https_request_options_callback),\nthe following per-request options are supported:\n- `followRedirects` (default: `true`) – whether redirects should be followed.\n\n- `maxRedirects` (default: `21`) – sets the maximum number of allowed redirects; if exceeded, an error will be emitted.\n\n- `maxBodyLength` (default: 10MB) – sets the maximum size of the request body; if exceeded, an error will be emitted.\n\n- `agents` (default: `undefined`) – sets the `agent` option per protocol, since HTTP and HTTPS use different agents. Example value: `{ http: new http.Agent(), https: new https.Agent() }`\n\n\n### Advanced usage\nBy default, `follow-redirects` will use the Node.js default implementations\nof [`http`](https://nodejs.org/api/http.html)\nand [`https`](https://nodejs.org/api/https.html).\nTo enable features such as caching and/or intermediate request tracking,\nyou might instead want to wrap `follow-redirects` around custom protocol implementations:\n\n```javascript\nvar followRedirects = require('follow-redirects').wrap({\n  http: require('your-custom-http'),\n  https: require('your-custom-https'),\n});\n```\n\nSuch custom protocols only need an implementation of the `request` method.\n\n## Browserify Usage\n\nDue to the way `XMLHttpRequest` works, the `browserify` versions of `http` and `https` already follow redirects.\n If you are *only* targeting the browser, then this library has little value for you. If you want to write cross\n platform code for node and the browser, `follow-redirects` provides a great solution for making the native node\n modules behave the same as they do in browserified builds in the browser. To avoid bundling unnecessary code\n you should tell browserify to swap out `follow-redirects` with the standard modules when bundling.\n To make this easier, you need to change how you require the modules:\n\n```javascript\nvar http = require('follow-redirects/http');\nvar https = require('follow-redirects/https');\n```\n\nYou can then replace `follow-redirects` in your browserify configuration like so:\n\n```javascript\n\"browser\": {\n  \"follow-redirects/http\"  : \"http\",\n  \"follow-redirects/https\" : \"https\"\n}\n```\n\nThe `browserify-http` module has not kept pace with node development, and no long behaves identically to the native\n module when running in the browser. If you are experiencing problems, you may want to check out\n [browserify-http-2](https://www.npmjs.com/package/http-browserify-2). It is more actively maintained and\n attempts to address a few of the shortcomings of `browserify-http`. In that case, your browserify config should\n look something like this:\n\n```javascript\n\"browser\": {\n  \"follow-redirects/http\"  : \"browserify-http-2/http\",\n  \"follow-redirects/https\" : \"browserify-http-2/https\"\n}\n```\n\n## Contributing\n\nPull Requests are always welcome. Please [file an issue](https://github.com/olalonde/follow-redirects/issues)\n detailing your proposal before you invest your valuable time. Additional features and bug fixes should be accompanied\n by tests. You can run the test suite locally with a simple `npm test` command.\n\n## Debug Logging\n\n`follow-redirects` uses the excellent [debug](https://www.npmjs.com/package/debug) for logging. To turn on logging\n set the environment variable `DEBUG=follow-redirects` for debug output from just this module. When running the test\n suite it is sometimes advantageous to set `DEBUG=*` to see output from the express server as well.\n\n## Authors\n\n- Olivier Lalonde (olalonde@gmail.com)\n- James Talmage (james@talmage.io)\n- [Ruben Verborgh](https://ruben.verborgh.org/)\n\n## License\n\nMIT: [http://olalonde.mit-license.org](http://olalonde.mit-license.org)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/olalonde/follow-redirects.git"
  },
  "scripts": {
    "lint": "eslint *.js test",
    "mocha": "nyc mocha",
    "test": "npm run lint && npm run mocha"
  },
  "version": "1.4.1"
}
