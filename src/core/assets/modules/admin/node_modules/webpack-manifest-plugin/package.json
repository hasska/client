{
  "_args": [
    [
      {
        "raw": "webpack-manifest-plugin@1.3.2",
        "scope": null,
        "escapedName": "webpack-manifest-plugin",
        "name": "webpack-manifest-plugin",
        "rawSpec": "1.3.2",
        "spec": "1.3.2",
        "type": "version"
      },
      "/Users/vt/Desktop/projects/newv1/dashboard/node_modules/react-scripts"
    ]
  ],
  "_from": "webpack-manifest-plugin@1.3.2",
  "_id": "webpack-manifest-plugin@1.3.2",
  "_inCache": true,
  "_location": "/webpack-manifest-plugin",
  "_nodeVersion": "8.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/webpack-manifest-plugin-1.3.2.tgz_1505392791648_0.4696916504763067"
  },
  "_npmUser": {
    "name": "mastilver",
    "email": "th.sileghem@gmail.com"
  },
  "_npmVersion": "5.4.0",
  "_phantomChildren": {
    "graceful-fs": "4.1.11",
    "klaw": "1.3.1",
    "path-is-absolute": "1.0.1",
    "rimraf": "2.6.2"
  },
  "_requested": {
    "raw": "webpack-manifest-plugin@1.3.2",
    "scope": null,
    "escapedName": "webpack-manifest-plugin",
    "name": "webpack-manifest-plugin",
    "rawSpec": "1.3.2",
    "spec": "1.3.2",
    "type": "version"
  },
  "_requiredBy": [
    "/react-scripts"
  ],
  "_resolved": "https://registry.npmjs.org/webpack-manifest-plugin/-/webpack-manifest-plugin-1.3.2.tgz",
  "_shasum": "5ea8ee5756359ddc1d98814324fe43496349a7d4",
  "_shrinkwrap": null,
  "_spec": "webpack-manifest-plugin@1.3.2",
  "_where": "/Users/vt/Desktop/projects/newv1/dashboard/node_modules/react-scripts",
  "author": {
    "name": "Dane Thurber",
    "email": "dane.thurber@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/danethurber/webpack-manifest-plugin/issues"
  },
  "dependencies": {
    "fs-extra": "^0.30.0",
    "lodash": ">=3.5 <5"
  },
  "description": "webpack plugin for generating asset manifests",
  "devDependencies": {
    "codecov": "^2.2.0",
    "css-loader": "^0.9.1",
    "extract-text-webpack-plugin": "^0.5.0",
    "file-loader": "^0.9.0",
    "jasmine": "^2.2.1",
    "memory-fs": "^0.2.0",
    "nyc": "^10.3.2",
    "rimraf": "^2.6.1",
    "style-loader": "^0.8.3",
    "webpack": "^1.7.3"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-MX60Bv2G83Zks9pi3oLOmRgnPAnwrlMn+lftMrWBm199VQjk46/xgzBi9lPfpZldw2+EI2S+OevuLIaDuxCWRw==",
    "shasum": "5ea8ee5756359ddc1d98814324fe43496349a7d4",
    "tarball": "https://registry.npmjs.org/webpack-manifest-plugin/-/webpack-manifest-plugin-1.3.2.tgz"
  },
  "engines": {
    "node": ">=0.10"
  },
  "files": [
    "index.js",
    "lib"
  ],
  "gitHead": "ea193faf3a9e8c13ab96fe48316bdc2d2a4281d3",
  "homepage": "https://github.com/danethurber/webpack-manifest-plugin",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "mastilver",
      "email": "th.sileghem@gmail.com"
    },
    {
      "name": "danethurber",
      "email": "dane.thurber@gmail.com"
    }
  ],
  "name": "webpack-manifest-plugin",
  "nyc": {
    "reporter": [
      "lcov",
      "text"
    ],
    "exclude": [
      "spec"
    ]
  },
  "optionalDependencies": {},
  "peerDependencies": {
    "webpack": "1 || 2 || 3"
  },
  "readme": "# Webpack Manifest Plugin [![Build Status](https://travis-ci.org/danethurber/webpack-manifest-plugin.svg?branch=master)](https://travis-ci.org/danethurber/webpack-manifest-plugin)  [![codecov](https://codecov.io/gh/danethurber/webpack-manifest-plugin/badge.svg?branch=master)](https://codecov.io/gh/danethurber/webpack-manifest-plugin?branch=master) [![Gitter](https://img.shields.io/gitter/room/nwjs/nw.js.svg)](https://gitter.im/webpack-manifest-plugin#)\n\n\nWebpack plugin for generating an asset manifest.\n\n## Install\n\n```bash\nnpm install --save-dev webpack-manifest-plugin\n```\n\n## Usage\n\nIn your `webpack.config.js`\n\n```javascript\nvar ManifestPlugin = require('webpack-manifest-plugin');\n\nmodule.exports = {\n    // ...\n    plugins: [\n      new ManifestPlugin()\n    ]\n};\n```\n\nThis will generate a `manifest.json` file in your root output directory with a mapping of all source file names to their corresponding output file, for example:\n\n```json\n{\n  \"mods/alpha.js\": \"mods/alpha.1234567890.js\",\n  \"mods/omega.js\": \"mods/omega.0987654321.js\"\n}\n```\n\n\n## Configuration\n\nA manifest is configurable using constructor options:\n\n```javascript\nnew ManifestPlugin({\n  fileName: 'my-manifest.json',\n  basePath: '/app/'\n  seed: {\n    name: 'My Manifest'\n  }\n})\n```\n\n\n## Options:\n\n### `fileName`\n\nType: `String`<br>\nDefault: `manifest.json`\n\nThe manifest filename in your output directory.\n\n\n### `basePath`\n\nType: `String`\n\nA path prefix for all file references. Useful for including your output path in the manifest.\n\n\n### `publicPath`\n\nType: `String`\n\nA path prefix used only on output files, similar to Webpack's  [output.publicPath](https://github.com/webpack/docs/wiki/configuration#outputpublicpath). Ignored if `basePath` was also provided.\n\n\n### `stripSrc`\n\nType: `String`, `RegExp`\n\nRemoves unwanted strings from source filenames.\n\n\n### `writeToFileEmit`\n\nType: `Boolean`<br>\nDefault: `false`\n\nIf set to `true` will emit to build folder and memory in combination with `webpack-dev-server`\n\n\n### `seed`\n\nType: `Object`<br>\nDefault: `{}`\n\nA cache of key/value pairs to used to seed the manifest. This may include a set of [custom key/value](https://developer.mozilla.org/en-US/Add-ons/WebExtensions/manifest.json) pairs to include in your manifest, or may be used to combine manifests across compilations in [multi-compiler mode](https://github.com/webpack/webpack/tree/master/examples/multi-compiler). To combine manifests, pass a shared seed object to each compiler's ManifestPlugin instance.\n\n### `filter`\n\nType: `function`\n\nFilter out files. [more details](#hooks-options)\n\n\n### `map`\n\nType: `function`\n\nModify files details before the manifest is created. [more details](#hooks-options)\n\n\n### `reduce`\n\nType: `function`<br>\nDefault: `(manifest, {name, path}) => ({...manifest, [name]: path})`\n\nCreate the manifest. It can return anything as long as it's serialisable by `JSON.stringify`. Use the `seed` options to populate `manifest`. [more details](#hooks-options)\n\n\n## Hooks Options\n\n`filter`, `map`, `reduce` takes as an input an Object with the following properties:\n\n### `path`\n\nType: `String`\n\n\n### `chunk`\n\nType: [`Chunk`](https://github.com/webpack/webpack/blob/master/lib/Chunk.js)\n\n\n### `name`\n\nType: `String`, `null`\n\n\n### `isChunk`\n\nType: `Boolean`\n\n\n### `isInitial`\n\nType: `Boolean`\n\nIs required to run you app. Cannot be `true` if `isChunk` is `false`.\n\n\n### `isAsset`\n\nType: `Boolean`\n\n\n### `isModuleAsset`\n\nType: `Boolean`\n\nIs required by a module. Cannot be `true` if `isAsset` is `false`.\n\n\n## License\n\nMIT Â© [Dane Thurber](https://github.com/danethurber)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/danethurber/webpack-manifest-plugin.git"
  },
  "scripts": {
    "test": "nyc jasmine"
  },
  "version": "1.3.2"
}
