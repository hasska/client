{
  "_args": [
    [
      {
        "raw": "node-notifier@^5.0.2",
        "scope": null,
        "escapedName": "node-notifier",
        "name": "node-notifier",
        "rawSpec": "^5.0.2",
        "spec": ">=5.0.2 <6.0.0",
        "type": "range"
      },
      "/Users/vt/Desktop/projects/newv1/dashboard/node_modules/jest/node_modules/jest-cli"
    ]
  ],
  "_from": "node-notifier@>=5.0.2 <6.0.0",
  "_id": "node-notifier@5.2.1",
  "_inCache": true,
  "_location": "/node-notifier",
  "_nodeVersion": "9.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/node-notifier-5.2.1.tgz_1515866677762_0.4057284016162157"
  },
  "_npmUser": {
    "name": "mikaelb",
    "email": "mikaelbre@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "node-notifier@^5.0.2",
    "scope": null,
    "escapedName": "node-notifier",
    "name": "node-notifier",
    "rawSpec": "^5.0.2",
    "spec": ">=5.0.2 <6.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/jest/jest-cli"
  ],
  "_resolved": "https://registry.npmjs.org/node-notifier/-/node-notifier-5.2.1.tgz",
  "_shasum": "fa313dd08f5517db0e2502e5758d664ac69f9dea",
  "_shrinkwrap": null,
  "_spec": "node-notifier@^5.0.2",
  "_where": "/Users/vt/Desktop/projects/newv1/dashboard/node_modules/jest/node_modules/jest-cli",
  "author": {
    "name": "Mikael Brevik"
  },
  "bugs": {
    "url": "https://github.com/mikaelbr/node-notifier/issues"
  },
  "dependencies": {
    "growly": "^1.3.0",
    "semver": "^5.4.1",
    "shellwords": "^0.1.1",
    "which": "^1.3.0"
  },
  "description": "A Node.js module for sending notifications on native Mac, Windows (post and pre 8) and Linux (or Growl as fallback)",
  "devDependencies": {
    "eslint": "^4.15.0",
    "eslint-config-semistandard": "^12.0.0",
    "eslint-config-standard": "^11.0.0-beta.0",
    "eslint-plugin-import": "^2.8.0",
    "eslint-plugin-node": "^5.2.1",
    "eslint-plugin-promise": "^3.6.0",
    "eslint-plugin-standard": "^3.0.1",
    "husky": "^0.14.3",
    "jest": "^22.0.6",
    "lint-staged": "^6.0.0",
    "prettier": "^1.10.2"
  },
  "directories": {
    "example": "example",
    "test": "test"
  },
  "dist": {
    "integrity": "sha512-MIBs+AAd6dJ2SklbbE8RUDRlIVhU8MaNLh1A9SUZDUHPiZkWLFde6UNwG41yQHZEToHgJMXqyVZ9UcS/ReOVTg==",
    "shasum": "fa313dd08f5517db0e2502e5758d664ac69f9dea",
    "tarball": "https://registry.npmjs.org/node-notifier/-/node-notifier-5.2.1.tgz"
  },
  "gitHead": "9420a38fc329c7700eefd35594319bf3a96227a0",
  "homepage": "https://github.com/mikaelbr/node-notifier#readme",
  "jest": {
    "testRegex": "/test/[^_]*.js",
    "testEnvironment": "node",
    "setupTestFrameworkScriptFile": "./test/_test-matchers.js"
  },
  "keywords": [
    "notification center",
    "mac os x 10.8",
    "notify",
    "terminal-notifier",
    "notify-send",
    "growl",
    "windows 8 notification",
    "toaster",
    "notification"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.{js,json,css,md}": [
      "prettier --write",
      "git add"
    ]
  },
  "main": "index.js",
  "maintainers": [
    {
      "name": "mikaelb",
      "email": "mikaelbre@gmail.com"
    }
  ],
  "name": "node-notifier",
  "optionalDependencies": {},
  "readme": "# node-notifier [![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Dependency Status][depstat-image]][depstat-url]\n\nSend cross platform native notifications using Node.js. Notification Center for macOS,\nnotify-osd/libnotify-bin for Linux, Toasters for Windows 8/10, or taskbar Balloons for\nearlier Windows versions. Growl is used if none of these requirements are met.\n[Works well with electron](#within-electron-packaging).\n\n![macOS Screenshot](https://raw.githubusercontent.com/mikaelbr/node-notifier/master/example/mac.png)\n![Native Windows Screenshot](https://raw.githubusercontent.com/mikaelbr/node-notifier/master/example/windows.png)\n\n## Input Example macOS Notification Center\n\n![Input Example](https://raw.githubusercontent.com/mikaelbr/node-notifier/master/example/input-example.gif)\n\n## Quick Usage\n\nShow a native notification on macOS, Windows, Linux:\n\n```javascript\nconst notifier = require('node-notifier');\n// String\nnotifier.notify('Message');\n\n// Object\nnotifier.notify({\n  title: 'My notification',\n  message: 'Hello, there!'\n});\n```\n\n## Requirements\n\n* **macOS**: >= 10.8 or Growl if earlier.\n* **Linux**: `notify-osd` or `libnotify-bin` installed (Ubuntu should have this by default)\n* **Windows**: >= 8, task bar balloon for Windows < 8. Growl as fallback. Growl takes precedence over Windows balloons.\n* **General Fallback**: Growl\n\nSee [documentation and flow chart for reporter choice](./DECISION_FLOW.md)\n\n## Install\n\n```shell\nnpm install --save node-notifier\n```\n\n## CLI\n\nCLI is moved to separate project: https://github.com/mikaelbr/node-notifier-cli\n\n## Cross-Platform Advanced Usage\n\nStandard usage, with cross-platform fallbacks as defined in the\n[reporter flow chart](./DECISION_FLOW.md). All of the options\nbelow will work in a way or another on all platforms.\n\n```javascript\nconst notifier = require('node-notifier');\nconst path = require('path');\n\nnotifier.notify(\n  {\n    title: 'My awesome title',\n    message: 'Hello from node, Mr. User!',\n    icon: path.join(__dirname, 'coulson.jpg'), // Absolute path (doesn't work on balloons)\n    sound: true, // Only Notification Center or Windows Toasters\n    wait: true // Wait with callback, until user action is taken against notification\n  },\n  function(err, response) {\n    // Response is response from notification\n  }\n);\n\nnotifier.on('click', function(notifierObject, options) {\n  // Triggers if `wait: true` and user clicks notification\n});\n\nnotifier.on('timeout', function(notifierObject, options) {\n  // Triggers if `wait: true` and notification closes\n});\n```\n\nYou can also specify what reporter you want to use if you\nwant to customize it or have more specific options per system.\nSee documentation for each reporter below.\n\nExample:\n\n```javascript\nconst NotificationCenter = require('node-notifier/notifiers/notificationcenter');\nnew NotificationCenter(options).notify();\n\nconst NotifySend = require('node-notifier/notifiers/notifysend');\nnew NotifySend(options).notify();\n\nconst WindowsToaster = require('node-notifier/notifiers/toaster');\nnew WindowsToaster(options).notify();\n\nconst Growl = require('node-notifier/notifiers/growl');\nnew Growl(options).notify();\n\nconst WindowsBalloon = require('node-notifier/notifiers/balloon');\nnew WindowsBalloon(options).notify();\n```\n\nOr if you are using several (or you are lazy):\n(note: technically, this takes longer to require)\n\n```javascript\nconst nn = require('node-notifier');\n\nnew nn.NotificationCenter(options).notify();\nnew nn.NotifySend(options).notify();\nnew nn.WindowsToaster(options).notify(options);\nnew nn.WindowsBalloon(options).notify(options);\nnew nn.Growl(options).notify(options);\n```\n\n## Contents\n\n* [Notification Center documentation](#usage-notificationcenter)\n* [Windows Toaster documentation](#usage-windowstoaster)\n* [Windows Balloon documentation](#usage-windowsballoon)\n* [Growl documentation](#usage-growl)\n* [Notify-send documentation](#usage-notifysend)\n\n### Usage NotificationCenter\n\nSame usage and parameter setup as [terminal-notifier](https://github.com/julienXX/terminal-notifier).\n\nNative Notification Center requires macOS version 10.8 or higher. If you have\nan earlier version, Growl will be the fallback. If Growl isn't installed, an\nerror will be returned in the callback.\n\n#### Example\n\nWrapping around [terminal-notifier](https://github.com/julienXX/terminal-notifier), you can\ndo all terminal-notifier can do through properties to the `notify` method. E.g.\nif `terminal-notifier` says `-message`, you can do `{message: 'Foo'}`, or\nif `terminal-notifier` says `-list ALL`, you can do `{list: 'ALL'}`. Notification\nis the primary focus for this module, so listing and activating do work,\nbut isn't documented.\n\n### All notification options with their defaults:\n\n```javascript\nconst NotificationCenter = require('node-notifier').NotificationCenter;\n\nvar notifier = new NotificationCenter({\n  withFallback: false, // Use Growl Fallback if <= 10.8\n  customPath: void 0 // Relative/Absolute path to binary if you want to use your own fork of terminal-notifier\n});\n\nnotifier.notify(\n  {\n    title: void 0,\n    subtitle: void 0,\n    message: void 0,\n    sound: false, // Case Sensitive string for location of sound file, or use one of macOS' native sounds (see below)\n    icon: 'Terminal Icon', // Absolute Path to Triggering Icon\n    contentImage: void 0, // Absolute Path to Attached Image (Content Image)\n    open: void 0, // URL to open on Click\n    wait: false, // Wait for User Action against Notification or times out. Same as timeout = 5 seconds\n\n    // New in latest version. See `example/macInput.js` for usage\n    timeout: 5, // Takes precedence over wait if both are defined.\n    closeLabel: void 0, // String. Label for cancel button\n    actions: void 0, // String | Array<String>. Action label or list of labels in case of dropdown\n    dropdownLabel: void 0, // String. Label to be used if multiple actions\n    reply: false // Boolean. If notification should take input. Value passed as third argument in callback and event emitter.\n  },\n  function(error, response, metadata) {\n    console.log(response, metadata);\n  }\n);\n```\n\n**Note:** `wait` option is shorthand for `timeout: 5` and doesn't make the notification sticky, but sets\ntimeout for 5 seconds. Without `wait` or `timeout` notifications are just fired and forgotten Without\ngiven any response. To be able to listen for response (like activation/clicked), you have to define a timeout.\nThis is not true if you have defined `reply`. If using `reply` it's recommended to set a high timeout or no timeout at all.\n\n**For macOS notifications, icon and contentImage, and all forms of reply/actions requires macOS 10.9.**\n\nSound can be one of these: `Basso`, `Blow`, `Bottle`, `Frog`, `Funk`, `Glass`,\n`Hero`, `Morse`, `Ping`, `Pop`, `Purr`, `Sosumi`, `Submarine`, `Tink`.\nIf sound is simply `true`, `Bottle` is used.\n\nSee [specific Notification Center example](./example/advanced.js). Also, [see input example](./example/macInput.js).\n\n**Custom Path clarification**\n\n`customPath` takes a value of a relative or absolute path to the binary of your fork/custom version of terminal-notifier.\n\nExample: `./vendor/terminal-notifier.app/Contents/MacOS/terminal-notifier`\n\n### Usage WindowsToaster\n\n**Note:** There are some limitations for images in native Windows 8 notifications:\nThe image must be a PNG image, and cannot be over 1024x1024 px, or over over 200Kb.\nYou also need to specify the image by using an absolute path. These limitations are\ndue to the Toast notification system. A good tip is to use something like\n`path.join` or `path.delimiter` to have cross-platform pathing.\n\nFrom [mikaelbr/gulp-notify#90 (comment)](https://github.com/mikaelbr/gulp-notify/issues/90#issuecomment-129333034)\n\n> You can make it work by going to System > Notifications & Actions. The 'toast' app needs to have Banners enabled. (You can activate banners by clicking on the 'toast' app and setting the 'Show notification banners' to On)\n\n**Windows 10 Fall Creators Update (Version 1709) Note:**\n\nWith the Fall Creators Update Notifications on Windows 10 will only work as expected if the correct appID is specified.\nYour appID has to be exactly the same as registered with the install of your app.\nYou can find the ID of your App by searching the registry for the appID you specified at installation of your app. For example if you are using the squirrel framework your appID will be something like com.squirrel.your.app.\n\nDefault behaviour is to have the underlying toaster applicaton as appId. This works as expected, but shows `SnoreToast` as text in the notification.\n\n[Snoretoast](https://github.com/KDE/snoretoast) is used to get native Windows Toasts!\n\n```javascript\nconst WindowsToaster = require('node-notifier').WindowsToaster;\n\nvar notifier = new WindowsToaster({\n  withFallback: false, // Fallback to Growl or Balloons?\n  customPath: void 0 // Relative/Absolute path if you want to use your fork of SnoreToast.exe\n});\n\nnotifier.notify(\n  {\n    title: void 0, // String. Required\n    message: void 0, // String. Required if remove is not defined\n    icon: void 0, // String. Absolute path to Icon\n    sound: false, // Bool | String (as defined by http://msdn.microsoft.com/en-us/library/windows/apps/hh761492.aspx)\n    wait: false, // Bool. Wait for User Action against Notification or times out\n    id: void 0, // Number. ID to use for closing notification.\n    appID: void 0, // String. App.ID and app Name. Defaults to no value, causing SnoreToast text to be visible.\n    remove: void 0, // Number. Refer to previously created notification to close.\n    install: void 0 // String (path, application, app id).  Creates a shortcut <path> in the start menu which point to the executable <application>, appID used for the notifications.\n  },\n  function(error, response) {\n    console.log(response);\n  }\n);\n```\n\n### Usage Growl\n\n```javascript\nconst Growl = require('node-notifier').Growl;\n\nvar notifier = new Growl({\n  name: 'Growl Name Used', // Defaults as 'Node'\n  host: 'localhost',\n  port: 23053\n});\n\nnotifier.notify({\n  title: 'Foo',\n  message: 'Hello World',\n  icon: fs.readFileSync(__dirname + '/coulson.jpg'),\n  wait: false, // Wait for User Action against Notification\n\n  // and other growl options like sticky etc.\n  sticky: false,\n  label: void 0,\n  priority: void 0\n});\n```\n\nSee more information about using\n[growly](https://github.com/theabraham/growly/).\n\n### Usage WindowsBalloon\n\nFor earlier Windows versions, the taskbar balloons are used (unless\nfallback is activated and Growl is running). For balloons, a great\nproject called [notifu](http://www.paralint.com/projects/notifu/) is used.\n\n```javascript\nconst WindowsBalloon = require('node-notifier').WindowsBalloon;\n\nvar notifier = new WindowsBalloon({\n  withFallback: false, // Try Windows Toast and Growl first?\n  customPath: void 0 // Relative/Absolute path if you want to use your fork of notifu\n});\n\nnotifier.notify(\n  {\n    title: void 0,\n    message: void 0,\n    sound: false, // true | false.\n    time: 5000, // How long to show balloon in ms\n    wait: false, // Wait for User Action against Notification\n    type: 'info' // The notification type : info | warn | error\n  },\n  function(error, response) {\n    console.log(response);\n  }\n);\n```\n\nSee full usage on the [project homepage: notifu](http://www.paralint.com/projects/notifu/).\n\n### Usage NotifySend\n\nNote: notify-send doesn't support the wait flag.\n\n```javascript\nconst NotifySend = require('node-notifier').NotifySend;\n\nvar notifier = new NotifySend();\n\nnotifier.notify({\n  title: 'Foo',\n  message: 'Hello World',\n  icon: __dirname + '/coulson.jpg',\n\n  // .. and other notify-send flags:\n  urgency: void 0,\n  time: void 0,\n  category: void 0,\n  hint: void 0\n});\n```\n\nSee flags and options [on the man pages](http://manpages.ubuntu.com/manpages/gutsy/man1/notify-send.1.html)\n\n## Thanks to OSS\n\n`node-notifier` is made possible through Open Source Software. A very special thanks to all the modules `node-notifier` uses.\n\n* [terminal-notifier](https://github.com/julienXX/terminal-notifier)\n* [Snoretoast](https://github.com/KDE/snoretoast)\n* [notifu](http://www.paralint.com/projects/notifu/)\n* [growly](https://github.com/theabraham/growly/)\n\n[![NPM downloads][npm-downloads]][npm-url]\n\n## Common Issues\n\n### `SnoreToast` text on Windows\n\nSee note on \"Windows 10 Fall Creators Update\" in Windows section. Short answer, update to your own `appId`.\n\n### Use inside tmux session\n\nWhen using node-notifier within a tmux session, it can cause a hang in the system. This can be solved by following the steps described in this comment: https://github.com/julienXX/terminal-notifier/issues/115#issuecomment-104214742\n\nSee more info here: https://github.com/mikaelbr/node-notifier/issues/61#issuecomment-163560801\n\n### Custom icon without terminal icon on macOS\n\nEven if you define an icon in the configuration object for `node-notifier`, you will see a small Terminal icon in the notification (see the example at the top of this document). This is the way notifications on macOS work, it always show the parent icon of the application initiating the notification. For node-notifier, terminal-notifier is the initiator and has Terminal icon defined as its icon. To define your custom icon, you need to fork terminal-notifier and build your custom version with your icon. See this issue for more info: https://github.com/mikaelbr/node-notifier/issues/71\n\n### Within Electron Packaging\n\nIf packaging your Electron app as an `asar`, you will find node-notifier will fail to load. Due to the way asar works, you cannot execute a binary from within an asar. As a simple solution, when packaging the app into an asar please make sure you `--unpack` the vendor folder of node-notifier, so the module still has access to the notification binaries. To do this, you can do so by using the following command:\n\n```bash\nasar pack . app.asar --unpack \"./node_modules/node-notifier/vendor/**\"\n```\n\n### Using Webpack\n\nWhen using node-notifier inside of webpack, you must add the following snippet to your `webpack.config.js`. The reason this is required, is because node-notifier loads the notifiers from a binary, and so a relative file path is needed. When webpack compiles the modules, it supresses file directories, causing node-notifier to error on certain platforms. To fix/workaround this, you must tell webpack to keep the relative file directories, by doing so, append the following code to your `webpack.config.js`\n\n```javascript\nnode: {\n  __filename: true,\n  __dirname: true\n}\n```\n\n## License\n\n[MIT License](http://en.wikipedia.org/wiki/MIT_License)\n\n[npm-url]: https://npmjs.org/package/node-notifier\n[npm-image]: http://img.shields.io/npm/v/node-notifier.svg?style=flat\n[npm-downloads]: http://img.shields.io/npm/dm/node-notifier.svg?style=flat\n[travis-url]: http://travis-ci.org/mikaelbr/node-notifier\n[travis-image]: http://img.shields.io/travis/mikaelbr/node-notifier.svg?style=flat\n[depstat-url]: https://gemnasium.com/mikaelbr/node-notifier\n[depstat-image]: http://img.shields.io/gemnasium/mikaelbr/node-notifier.svg?style=flat\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/mikaelbr/node-notifier.git"
  },
  "scripts": {
    "example": "node ./example/message.js",
    "example:mac": "node ./example/advanced.js",
    "example:mac:input": "node ./example/macInput.js",
    "example:windows": "node ./example/toaster.js",
    "lint": "eslint example/*.js lib/*.js notifiers/*.js test/**/*.js index.js",
    "precommit": "lint-staged",
    "pretest": "npm run lint",
    "test": "jest"
  },
  "version": "5.2.1"
}
