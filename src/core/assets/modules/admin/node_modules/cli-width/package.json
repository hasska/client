{
  "_args": [
    [
      {
        "raw": "cli-width@^2.0.0",
        "scope": null,
        "escapedName": "cli-width",
        "name": "cli-width",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "/Users/vt/Desktop/projects/newv1/dashboard/node_modules/inquirer"
    ]
  ],
  "_from": "cli-width@>=2.0.0 <3.0.0",
  "_id": "cli-width@2.2.0",
  "_inCache": true,
  "_location": "/cli-width",
  "_nodeVersion": "6.9.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/cli-width-2.2.0.tgz_1503409565255_0.3628303287550807"
  },
  "_npmUser": {
    "name": "knownasilya",
    "email": "ilya@burstcreations.com"
  },
  "_npmVersion": "4.6.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "cli-width@^2.0.0",
    "scope": null,
    "escapedName": "cli-width",
    "name": "cli-width",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/inquirer"
  ],
  "_resolved": "https://registry.npmjs.org/cli-width/-/cli-width-2.2.0.tgz",
  "_shasum": "ff19ede8a9a5e579324147b0c11f0fbcbabed639",
  "_shrinkwrap": null,
  "_spec": "cli-width@^2.0.0",
  "_where": "/Users/vt/Desktop/projects/newv1/dashboard/node_modules/inquirer",
  "author": {
    "name": "Ilya Radchenko",
    "email": "ilya@burstcreations.com"
  },
  "bugs": {
    "url": "https://github.com/knownasilya/cli-width/issues"
  },
  "dependencies": {},
  "description": "Get stdout window width, with two fallbacks, tty and then a default.",
  "devDependencies": {
    "coveralls": "^2.11.4",
    "isparta": "^3.0.4",
    "rimraf": "^2.4.3",
    "standard-version": "^4.2.0",
    "tap-spec": "^4.1.0",
    "tape": "^3.4.0"
  },
  "directories": {},
  "dist": {
    "shasum": "ff19ede8a9a5e579324147b0c11f0fbcbabed639",
    "tarball": "https://registry.npmjs.org/cli-width/-/cli-width-2.2.0.tgz"
  },
  "gitHead": "176376e902a7d9fde3d82c885978e6d13d6496fc",
  "homepage": "https://github.com/knownasilya/cli-width",
  "license": "ISC",
  "main": "index.js",
  "maintainers": [
    {
      "name": "knownasilya",
      "email": "ilya@burstcreations.com"
    },
    {
      "name": "sboudrias",
      "email": "admin@simonboudrias.com"
    }
  ],
  "name": "cli-width",
  "optionalDependencies": {},
  "readme": "cli-width\n=========\n\nGet stdout window width, with four fallbacks, `tty`, `output.columns`, a custom environment variable and then a default.\n\n[![npm version](https://badge.fury.io/js/cli-width.svg)](http://badge.fury.io/js/cli-width)\n[![Build Status](https://travis-ci.org/knownasilya/cli-width.svg)](https://travis-ci.org/knownasilya/cli-width)\n[![Coverage Status](https://coveralls.io/repos/knownasilya/cli-width/badge.svg?branch=master&service=github)](https://coveralls.io/github/knownasilya/cli-width?branch=master)\n\n## Usage\n\n```\nnpm install --save cli-width\n```\n\n```js\n'use strict';\n\nvar cliWidth = require('cli-width');\n\ncliWidth(); // maybe 204 :)\n```\n\nYou can also set the `CLI_WIDTH` environment variable.\n\nIf none of the methods are supported, and the environment variable isn't set,\nthe default width value is going to be `0`, that can be changed using the configurable `options`.\n\n## API\n\n### cliWidth([options])\n\n`cliWidth` can be configured using an `options` parameter, the possible properties are:\n\n- **defaultWidth**\\<number\\> Defines a default value to be used if none of the methods are available, defaults to `0`\n- **output**\\<object\\> A stream to be used to read width values from, defaults to `process.stdout`\n- **tty**\\<object\\> TTY module to try to read width from as a fallback, defaults to `require('tty')`\n\n\n### Examples\n\nDefining both a default width value and a stream output to try to read from:\n\n```js\nvar cliWidth = require('cli-width');\nvar ttys = require('ttys');\n\ncliWidth({\n  defaultWidth: 80,\n  output: ttys.output\n});\n```\n\nDefines a different tty module to read width from:\n\n```js\nvar cliWidth = require('cli-width');\nvar ttys = require('ttys');\n\ncliWidth({\n  tty: ttys\n});\n```\n\n## Tests\n\n```bash\nnpm install\nnpm test\n```\n\nCoverage can be generated with `npm run coverage`.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/knownasilya/cli-width.git"
  },
  "scripts": {
    "coverage": "isparta cover test/*.js | tspec",
    "coveralls": "npm run coverage -s && coveralls < coverage/lcov.info",
    "postcoveralls": "rimraf ./coverage",
    "release": "standard-version",
    "test": "node test | tspec"
  },
  "version": "2.2.0"
}
