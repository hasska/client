{
  "_args": [
    [
      {
        "raw": "eventemitter3@^2.0.3",
        "scope": null,
        "escapedName": "eventemitter3",
        "name": "eventemitter3",
        "rawSpec": "^2.0.3",
        "spec": ">=2.0.3 <3.0.0",
        "type": "range"
      },
      "/Users/vt/Desktop/projects/newv1/dashboard/node_modules/quill"
    ]
  ],
  "_from": "eventemitter3@>=2.0.3 <3.0.0",
  "_id": "eventemitter3@2.0.3",
  "_inCache": true,
  "_location": "/eventemitter3",
  "_nodeVersion": "7.8.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/eventemitter3-2.0.3.tgz_1490971867525_0.8374074944294989"
  },
  "_npmUser": {
    "name": "lpinca",
    "email": "luigipinca@gmail.com"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "eventemitter3@^2.0.3",
    "scope": null,
    "escapedName": "eventemitter3",
    "name": "eventemitter3",
    "rawSpec": "^2.0.3",
    "spec": ">=2.0.3 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/quill"
  ],
  "_resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-2.0.3.tgz",
  "_shasum": "b5e1079b59fb5e1ba2771c0a993be060a58c99ba",
  "_shrinkwrap": null,
  "_spec": "eventemitter3@^2.0.3",
  "_where": "/Users/vt/Desktop/projects/newv1/dashboard/node_modules/quill",
  "author": {
    "name": "Arnout Kazemier"
  },
  "bugs": {
    "url": "https://github.com/primus/eventemitter3/issues"
  },
  "dependencies": {},
  "description": "EventEmitter3 focuses on performance while maintaining a Node.js AND browser compatible interface.",
  "devDependencies": {
    "assume": "~1.4.1",
    "browserify": "~14.1.0",
    "mocha": "~3.2.0",
    "nyc": "~10.2.0",
    "pre-commit": "~1.2.0",
    "uglify-js": "~2.8.20",
    "zuul": "~3.11.1"
  },
  "directories": {},
  "dist": {
    "shasum": "b5e1079b59fb5e1ba2771c0a993be060a58c99ba",
    "tarball": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-2.0.3.tgz"
  },
  "gitHead": "9afe1b539e52ec4b8eb4e07d69a5deb5f25c326b",
  "homepage": "https://github.com/primus/eventemitter3#readme",
  "keywords": [
    "EventEmitter",
    "EventEmitter2",
    "EventEmitter3",
    "Events",
    "addEventListener",
    "addListener",
    "emit",
    "emits",
    "emitter",
    "event",
    "once",
    "pub/sub",
    "publish",
    "reactor",
    "subscribe"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "v1",
      "email": "npm@3rd-Eden.com"
    },
    {
      "name": "3rdeden",
      "email": "npm@3rd-Eden.com"
    },
    {
      "name": "lpinca",
      "email": "luigipinca@gmail.com"
    }
  ],
  "name": "eventemitter3",
  "optionalDependencies": {},
  "pre-commit": "sync, test",
  "readme": "# EventEmitter3\n\n[![Version npm](https://img.shields.io/npm/v/eventemitter3.svg?style=flat-square)](https://www.npmjs.com/package/eventemitter3)[![Build Status](https://img.shields.io/travis/primus/eventemitter3/master.svg?style=flat-square)](https://travis-ci.org/primus/eventemitter3)[![Dependencies](https://img.shields.io/david/primus/eventemitter3.svg?style=flat-square)](https://david-dm.org/primus/eventemitter3)[![Coverage Status](https://img.shields.io/coveralls/primus/eventemitter3/master.svg?style=flat-square)](https://coveralls.io/r/primus/eventemitter3?branch=master)[![IRC channel](https://img.shields.io/badge/IRC-irc.freenode.net%23primus-00a8ff.svg?style=flat-square)](https://webchat.freenode.net/?channels=primus)\n\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/eventemitter3.svg)](https://saucelabs.com/u/eventemitter3)\n\nEventEmitter3 is a high performance EventEmitter. It has been micro-optimized\nfor various of code paths making this, one of, if not the fastest EventEmitter\navailable for Node.js and browsers. The module is API compatible with the\nEventEmitter that ships by default with Node.js but there are some slight\ndifferences:\n\n- Domain support has been removed.\n- We do not `throw` an error when you emit an `error` event and nobody is\n  listening.\n- The `newListener` event is removed as the use-cases for this functionality are\n  really just edge cases.\n- No `setMaxListeners` and its pointless memory leak warnings. If you want to\n  add `end` listeners you should be able to do that without modules complaining.\n- No `listenerCount` method. Use `EE.listeners(event).length` instead.\n- Support for custom context for events so there is no need to use `fn.bind`.\n- The `listeners` method can do existence checking instead of returning only\n  arrays.\n- The `removeListener` method removes all matching listeners, not only the\n  first.\n\nIt's a drop in replacement for existing EventEmitters, but just faster. Free\nperformance, who wouldn't want that? The EventEmitter is written in EcmaScript 3\nso it will work in the oldest browsers and node versions that you need to\nsupport.\n\n## Installation\n\n```bash\n$ npm install --save eventemitter3        # npm\n$ component install primus/eventemitter3  # Component\n$ bower install eventemitter3             # Bower\n```\n\n## Usage\n\nAfter installation the only thing you need to do is require the module:\n\n```js\nvar EventEmitter = require('eventemitter3');\n```\n\nAnd you're ready to create your own EventEmitter instances. For the API\ndocumentation, please follow the official Node.js documentation:\n\nhttp://nodejs.org/api/events.html\n\n### Contextual emits\n\nWe've upgraded the API of the `EventEmitter.on`, `EventEmitter.once` and\n`EventEmitter.removeListener` to accept an extra argument which is the `context`\nor `this` value that should be set for the emitted events. This means you no\nlonger have the overhead of an event that required `fn.bind` in order to get a\ncustom `this` value.\n\n```js\nvar EE = new EventEmitter()\n  , context = { foo: 'bar' };\n\nfunction emitted() {\n  console.log(this === context); // true\n}\n\nEE.once('event-name', emitted, context);\nEE.on('another-event', emitted, context);\nEE.removeListener('another-event', emitted, context);\n```\n\n### Existence\n\nTo check if there is already a listener for a given event you can supply the\n`listeners` method with an extra boolean argument. This will transform the\noutput from an array, to a boolean value which indicates if there are listeners\nin place for the given event:\n\n```js\nvar EE = new EventEmitter();\nEE.once('event-name', function () {});\nEE.on('another-event', function () {});\n\nEE.listeners('event-name', true); // returns true\nEE.listeners('unknown-name', true); // returns false\n```\n\n### Tests and benchmarks\n\nThis module is well tested. You can run:\n\n- `npm test` to run the tests under Node.js.\n- `npm run test-browser` to run the tests in real browsers via Sauce Labs.\n\nWe also have a set of benchmarks to compare EventEmitter3 with some available\nalternatives. To run the benchmarks run `npm run benchmark`.\n\nTests and benchmarks are not included in the npm package. If you want to play\nwith them you have to clone the GitHub repository.\n\n## License\n\n[MIT](LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/primus/eventemitter3.git"
  },
  "scripts": {
    "benchmark": "find benchmarks/run -name '*.js' -exec benchmarks/start.sh {} \\;",
    "build": "mkdir -p umd && browserify index.js -s EventEmitter3 | uglifyjs -m -o umd/eventemitter3.min.js",
    "prepublish": "npm run build",
    "sync": "node versions.js",
    "test": "nyc --reporter=html --reporter=text mocha",
    "test-browser": "zuul -- test.js"
  },
  "typings": "index.d.ts",
  "version": "2.0.3"
}
